(window.webpackJsonp=window.webpackJsonp||[]).push([[419],{656:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-41-60"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-41-60","aria-hidden":"true"}},[t._v("#")]),t._v(" React 41-60")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#react-41-60"}},[t._v("React 41-60")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#41%E5%9C%A8redux%E4%B8%AD%E4%BB%80%E4%B9%88%E6%98%AFreducer%E5%AE%83%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8"}},[t._v("41.在redux中，什么是reducer？它有什么作用？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#42%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E%E6%80%8E%E4%B9%88%E5%9C%A8redux%E4%B8%AD%E5%AE%9A%E4%B9%89action"}},[t._v("42.举例说明怎么在redux中定义action？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#43%E5%9C%A8redux%E4%B8%AD%E4%BB%80%E4%B9%88%E6%98%AFaction"}},[t._v("43.在redux中，什么是action？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#44%E5%9C%A8redux%E4%B8%AD%E4%BB%80%E4%B9%88%E6%98%AFstore"}},[t._v("44.在redux中，什么是store？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#45%E4%B8%BA%E4%BB%80%E4%B9%88redux%E8%83%BD%E5%81%9A%E5%88%B0%E5%B1%80%E9%83%A8%E6%B8%B2%E6%9F%93%E5%91%A2"}},[t._v("45.为什么redux能做到局部渲染呢？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#46%E8%AF%B4%E8%AF%B4redux%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%E5%88%86%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("46.说说redux的优缺点分别是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#47redux%E5%AE%83%E7%9A%84%E4%B8%89%E4%B8%AA%E5%8E%9F%E5%88%99%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("47.redux它的三个原则是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#48%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%95%E4%B8%80%E6%95%B0%E6%8D%AE%E6%BA%90"}},[t._v("48.什么是单一数据源？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#49%E4%BB%80%E4%B9%88%E6%98%AFredux%E8%AF%B4%E8%AF%B4%E4%BD%A0%E5%AF%B9redux%E7%9A%84%E7%90%86%E8%A7%A3%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BF%90%E7%94%A8%E5%9C%BA%E6%99%AF"}},[t._v("49.什么是redux？说说你对redux的理解？有哪些运用场景？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#50react%E7%9A%84%E8%B7%AF%E7%94%B1%E5%92%8C%E6%99%AE%E9%80%9A%E8%B7%AF%E7%94%B1%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("50.react的路由和普通路由有什么区别？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#51%E8%AF%B7%E4%BD%A0%E8%AF%B4%E8%AF%B4react%E7%9A%84%E8%B7%AF%E7%94%B1%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9"}},[t._v("51.请你说说react的路由的优缺点？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#52%E8%AF%B7%E4%BD%A0%E8%AF%B4%E8%AF%B4react%E7%9A%84%E8%B7%AF%E7%94%B1%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("52.请你说说react的路由是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#53%E8%AF%B4%E8%AF%B4react-diff%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("53.说说react diff的原理是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#54react%E6%80%8E%E4%B9%88%E6%8F%90%E9%AB%98%E5%88%97%E8%A1%A8%E6%B8%B2%E6%9F%93%E7%9A%84%E6%80%A7%E8%83%BD"}},[t._v("54.react怎么提高列表渲染的性能？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#55%E4%BD%BF%E7%94%A8es6%E7%9A%84class%E5%AE%9A%E4%B9%89%E7%9A%84%E7%BB%84%E4%BB%B6%E4%B8%8D%E6%94%AF%E6%8C%81mixins%E4%BA%86%E9%82%A3%E7%94%A8%E4%BB%80%E4%B9%88%E5%8F%AF%E4%BB%A5%E6%9B%BF%E4%BB%A3%E5%91%A2"}},[t._v("55.使用ES6的class定义的组件不支持mixins了，那用什么可以替代呢？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#56%E4%B8%BA%E4%BD%95%E8%AF%B4%E8%99%9A%E6%8B%9Fdom%E4%BC%9A%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD"}},[t._v("56.为何说虚拟DOM会提高性能？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#57react%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%9C%A8%E5%93%AA%E4%B8%AA%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%AE%83%E4%BC%98%E5%8C%96%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("57.react的性能优化在哪个生命周期？它优化的原理是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#58%E4%BD%A0%E7%9F%A5%E9%81%93%E7%9A%84react%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95"}},[t._v("58.你知道的react性能优化有哪些方法？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#59%E4%B8%BE%E4%BE%8B%E8%AF%B4%E6%98%8E%E5%9C%A8react%E4%B8%AD%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8%E6%A0%B7%E5%BC%8F"}},[t._v("59.举例说明在react中怎么使用样式？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#60react%E6%9C%89%E5%93%AA%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95%E6%9D%A5%E5%A4%84%E7%90%86%E8%A1%A8%E5%8D%95%E8%BE%93%E5%85%A5"}},[t._v("60.react有哪几种方法来处理表单输入？")])])])])]),t._v(" "),s("h2",{attrs:{id:"_41-在redux中，什么是reducer？它有什么作用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_41-在redux中，什么是reducer？它有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 41.在redux中，什么是reducer？它有什么作用？")]),t._v(" "),s("p",[t._v("Reducer会接受当前的state和传入的actionType判断处理state。reducer是纯函数，一样的输入必须要得到一样的输出。reducer不能修改当前的state，必须复制一份，修改这个新的，然后返回新的对象作为当前的state。")]),t._v(" "),s("p",[t._v("reducer这里有个辅助函数，将所有的reducer整合到一个大的reducer里，传给createStore做参数")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" combineReducers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" applyMiddleware "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("会把一个由多个不同 reducer 函数作为 value 的 object，合并成一个最终的 reducer 函数，然后就可以对这个 reducer 调用 createStore。")]),t._v(" "),s("h2",{attrs:{id:"_42-举例说明怎么在redux中定义action？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_42-举例说明怎么在redux中定义action？","aria-hidden":"true"}},[t._v("#")]),t._v(" 42.举例说明怎么在redux中定义action？")]),t._v(" "),s("p",[t._v("Action表示应用中的各类动作或操作，不同的操作会改变应用相应的state状态，说白了就是一个带type属性的对象。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create actions")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD_ACTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ADD"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REDUCE_ACTION")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"REDUCE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ADD_ACTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    num\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reduce")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("num")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("REDUCE_ACTION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      num\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h2",{attrs:{id:"_43-在redux中，什么是action？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_43-在redux中，什么是action？","aria-hidden":"true"}},[t._v("#")]),t._v(" 43.在redux中，什么是action？")]),t._v(" "),s("p",[t._v("Action表示应用中的各类动作或操作，不同的操作会改变应用相应的state状态，说白了就是一个带type属性的对象。")]),t._v(" "),s("h2",{attrs:{id:"_44-在redux中，什么是store？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_44-在redux中，什么是store？","aria-hidden":"true"}},[t._v("#")]),t._v(" 44.在redux中，什么是store？")]),t._v(" "),s("p",[t._v("store 对象: state状态管理器")]),t._v(" "),s("p",[t._v("事实上，store就是一个JavaScript对象，里面包含了dispatch及获取页面状态数据数的方法等。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 派发action")]),t._v("\n  getState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取当前页面状态数据树，即store中的state")]),t._v("\n  subscribe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 订阅页面数据状态，即store肿state的变化")]),t._v("\n  replaceReducer  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般开发用不到，社区一些热更新或者代码分离技术中可能会使用到")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ul",[s("li",[t._v("创建一个 store 状态管理器"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们使用 redux 包提供的 createStore() 函数来创建一个 store 对象.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createStore "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redux'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reduxStore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reducer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" preloadedState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" enhancer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])]),t._v(" "),s("li",[t._v("store 对象 API\n"),s("ul",[s("li",[t._v("操作state "),s("code",[t._v("store.dispatch(action)")])]),t._v(" "),s("li",[t._v("获取state "),s("code",[t._v("store.getState()")]),t._v(";")])])])]),t._v(" "),s("h2",{attrs:{id:"_45-为什么redux能做到局部渲染呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_45-为什么redux能做到局部渲染呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 45.为什么redux能做到局部渲染呢？")]),t._v(" "),s("p",[t._v("Redux将React组件分为容器型组件和展示型组件。容器型组件一般通过connet函数生成，它订阅了全局状态的变化，通过mapStateToProps函数，我们可以对全局状态进行过滤，只返回该容器型组件关注的局部状态：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapStateToProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("todos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("todos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mapStateToProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TodoApp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("每一次全局状态变化都会调用所有容器型组件的mapStateToProps方法，该方法返回一个常规的Javascript对象，并将其合并到容器型组件的props上。")]),t._v(" "),s("p",[t._v("而展示型组件不直接从global state获取数据，其数据来源于父组件。当容器型组件对应global state有变化时，它会将变化传播到其所有的子组件(一般为展示型组件)。简单来说容器型组件与展示型组件是父子关系")]),t._v(" "),s("p",[t._v("用Redux官方API函数connect生成的容器型组件，默认会提供一个shouldComponentUpdate函数，其中对props和state进行了浅层比较`。如果我们不遵从Redux的immutable状态的规范和Pure Component规范，则容器型组件默认的shouldComponentUpdate函数就是无效的了。")]),t._v(" "),s("p",[t._v("在遵从Redux的immutable状态规范的情况下，当一个容器型组件的默认shouldComponentUpdate函数返回true时，则表明其对应的局部状态发生变化，需要将状态传播到各个子组件，相应的所有子组件也都会进行虚拟DOM比较，以确定是否需要重新渲染。如下图所示，容器型组件#1的状态发生变化后，所有的子组件都会进行虚拟DOM比较：")]),t._v(" "),s("h2",{attrs:{id:"_46-说说redux的优缺点分别是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_46-说说redux的优缺点分别是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 46.说说redux的优缺点分别是什么？")]),t._v(" "),s("p",[t._v("redux把流程规范了，统一渲染根节点虽然对代码管理上规范了一些，只要有需要显示数据的组件，当相关数据更新时都会自动进行更新，减少手动编码量，提高编码效率，相对于flux能省很多行代码。")]),t._v(" "),s("p",[t._v("一个组件所需要的数据，当相关数据更新时，组件要重新render，可能会有效率影响，或者需要写复杂的shouldComponentUpdate进行判断。")]),t._v(" "),s("h2",{attrs:{id:"_47-redux它的三个原则是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_47-redux它的三个原则是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 47.redux它的三个原则是什么？")]),t._v(" "),s("ul",[s("li",[t._v("单一数据源")]),t._v(" "),s("li",[t._v("state为只读")]),t._v(" "),s("li",[t._v("使用纯函数执行修改")])]),t._v(" "),s("h2",{attrs:{id:"_48-什么是单一数据源？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_48-什么是单一数据源？","aria-hidden":"true"}},[t._v("#")]),t._v(" 48.什么是单一数据源？")]),t._v(" "),s("p",[t._v("数据来源单一")]),t._v(" "),s("p",[t._v("页面状态数据被存储为一个JavaScript对象, 这棵页面状态数据树是会随着用户的操作或者异步数据的到达等变化而发生变更的，任何时刻我们都可以使用下面方式来获取当前应用的数据状态")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_49-什么是redux？说说你对redux的理解？有哪些运用场景？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_49-什么是redux？说说你对redux的理解？有哪些运用场景？","aria-hidden":"true"}},[t._v("#")]),t._v(" 49.什么是redux？说说你对redux的理解？有哪些运用场景？")]),t._v(" "),s("p",[t._v("Redux 是一个 JavaScript 状态容器，提供可预测化的状态管理")]),t._v(" "),s("p",[t._v("个人理解redux主要就是更好的管理状态，使原本分散在各组件中的状态集中在一个store里面，更利于团队协作和项目维护，你没有发现类似于spa一样的单页面应用场景其实主要就是应用于一些管理平台之类的项目吗")]),t._v(" "),s("ol",[s("li",[t._v("同一个 state 需要在多个 Component 中共享")]),t._v(" "),s("li",[t._v("需要操作一些全局性的常驻 Component，比如 Notifications，Tooltips 等")]),t._v(" "),s("li",[t._v("不同组件之间期望不用通过组件代码通信；")]),t._v(" "),s("li",[t._v("太多 props 需要在组件树中传递，其中大部分只是为了透传给子组件")]),t._v(" "),s("li",[t._v("业务太复杂导致 Component 文件太大，可以考虑将业务逻辑拆出来放到 Reducer 中")])]),t._v(" "),s("h2",{attrs:{id:"_50-react的路由和普通路由有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_50-react的路由和普通路由有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 50.react的路由和普通路由有什么区别？")]),t._v(" "),s("ol",[s("li",[t._v("react-router中的组件就是react中的组件，只不过它们被添加了一些特殊的逻辑而已。")]),t._v(" "),s("li",[t._v("Router Router相当于一个容器，不会被渲染出来。你的其他组件都要放在Router中才能使用到react-router的功能。")]),t._v(" "),s("li",[t._v("根据功能的不同，Router还分为BrowserRouter，MemoryRouter等")])]),t._v(" "),s("h2",{attrs:{id:"_51-请你说说react的路由的优缺点？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_51-请你说说react的路由的优缺点？","aria-hidden":"true"}},[t._v("#")]),t._v(" 51.请你说说react的路由的优缺点？")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ol",[s("li",[t._v("好的交互体验-- 户不需要重新刷新页面，获取数据也是通过Ajax异步获取，页面显示流畅。")]),t._v(" "),s("li",[t._v("好的前后端工作分离模式")]),t._v(" "),s("li",[t._v("减轻服务器压力 - 服务器只用出数据就可以，不用管展示逻辑和页面合成，吞吐能力会提高几倍；")]),t._v(" "),s("li",[t._v("共用一套后端程序代码 - 不用修改后端程序代码就可以同时用于Web界面、手机、平板等多种客户端；")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ol",[s("li",[t._v("SEO难度较高")]),t._v(" "),s("li",[t._v("前进、后退管理")]),t._v(" "),s("li",[t._v("初次加载耗时多")])]),t._v(" "),s("h2",{attrs:{id:"_52-请你说说react的路由是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_52-请你说说react的路由是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 52.请你说说react的路由是什么？")]),t._v(" "),s("p",[t._v("如果说我们的应用程序是一座小城的话，那么Route就是一座座带有门牌号的建筑物，而Link就代表了到某个建筑物的路线。有了路线和目的地，那么就缺一位老司机了，没错Router就是这个老司机。")]),t._v(" "),s("p",[t._v("react-router中的组件就是react中的组件，只不过它们被添加了一些特殊的逻辑而已。")]),t._v(" "),s("ul",[s("li",[t._v("Router Router相当于一个容器，不会被渲染出来。你的其他组件都要放在Router中才能使用到 react-router的功能。根据功能的不同，Router还分为BrowserRouter，MemoryRouter等。")]),t._v(" "),s("li",[t._v("Link Link被渲染成一个a标签，通常以声明式的方式被定义在应用程序中。")]),t._v(" "),s("li",[t._v("Route Route包含一个path，并指明了在path与URL匹配时要渲染的组件。")])]),t._v(" "),s("h2",{attrs:{id:"_53-说说react-diff的原理是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_53-说说react-diff的原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 53.说说react diff的原理是什么？")]),t._v(" "),s("p",[t._v("diff算法：比较真实dom与虚拟dom，得出差异dom patch，只更新改变的部分。")]),t._v(" "),s("ol",[s("li",[t._v("对比当前真实的DOM和虚拟DOM，在对比过程中直接更新真实DOM。")]),t._v(" "),s("li",[t._v("只对比同一层级的变化实现。")])]),t._v(" "),s("p",[t._v("react diff 原理")]),t._v(" "),s("ol",[s("li",[t._v("把树形结构按照层级分解，只比较同级元素。")]),t._v(" "),s("li",[t._v("列表结构的每个单元添加唯一的 key 属性，方便比较。")]),t._v(" "),s("li",[t._v("React 只会匹配相同 class 的 component（这里面的 class 指的是组件的名字）")]),t._v(" "),s("li",[t._v("合并操作，调用 component 的 setState 方法的时候, React 将其标记为 dirty.到每一个事件循环结束, React 检查所有标记 dirty 的 component 重新绘制.")]),t._v(" "),s("li",[t._v("选择性子树渲染。开发人员可以重写 shouldComponentUpdate 提高 diff 的性能。")])]),t._v(" "),s("h2",{attrs:{id:"_54-react怎么提高列表渲染的性能？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_54-react怎么提高列表渲染的性能？","aria-hidden":"true"}},[t._v("#")]),t._v(" 54.react怎么提高列表渲染的性能？")]),t._v(" "),s("ol",[s("li",[t._v("按需渲染")]),t._v(" "),s("li",[t._v("避免不必要的重复渲染")]),t._v(" "),s("li",[t._v("利用 "),s("code",[t._v("shouldComponentUpdate(nextProps, nextState)")])]),t._v(" "),s("li",[t._v("Immutable Data\nFacebook自家有一个专门处理不可变数据的库，immutable-js。我们知道，React其实是非常接近函数式编程的思想的，我们可以用下面这个式子来表示React的渲染。")])]),t._v(" "),s("h2",{attrs:{id:"_55-使用es6的class定义的组件不支持mixins了，那用什么可以替代呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_55-使用es6的class定义的组件不支持mixins了，那用什么可以替代呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 55.使用ES6的class定义的组件不支持mixins了，那用什么可以替代呢？")]),t._v(" "),s("ol",[s("li",[t._v("使用高阶组件替代Mixins")]),t._v(" "),s("li",[t._v("render props 模式")]),t._v(" "),s("li",[t._v("react hooks")])]),t._v(" "),s("h2",{attrs:{id:"_56-为何说虚拟dom会提高性能？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_56-为何说虚拟dom会提高性能？","aria-hidden":"true"}},[t._v("#")]),t._v(" 56.为何说虚拟DOM会提高性能？")]),t._v(" "),s("p",[t._v("虚拟dom相当于在js和真实dom中间加了一个缓存，利用"),s("code",[t._v("dom diff")]),t._v(" 算法避免了没有必要的dom操作，从而提高性能。")]),t._v(" "),s("p",[t._v("具体实现步骤如下：用 JavaScript 对象结构表示 DOM 树的结构；然后用这个树构建一个真正的 DOM 树，插到文档当中当状态变更的时候，重新构造一棵新的对象树。然后用新的树和旧的树进行比较，记录两棵树差异把2所记录的差异应用到步骤1所构建的真正的DOM树上，视图就更新了。")]),t._v(" "),s("h2",{attrs:{id:"_57-react的性能优化在哪个生命周期？它优化的原理是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_57-react的性能优化在哪个生命周期？它优化的原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 57.react的性能优化在哪个生命周期？它优化的原理是什么？")]),t._v(" "),s("blockquote",[s("p",[t._v("shouldComponentUpdate(nextProps, nextState)")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("拿当前props中值和下一次props中的值进行对比，数据相等时，返回false，反之返回true。但是此方法面对复杂的对象时，就没有效果了,比如说props长成这样，就没法应对了，因为在js中，"),s("code",[t._v("object")]),t._v("，"),s("code",[t._v("array")]),t._v("，"),s("code",[t._v("function")]),t._v("属于引用类型，即使改变其中数据，他们指向的还是同一内存地址，所以采用上面的判断就不行了。")]),t._v(" "),s("h2",{attrs:{id:"_58-你知道的react性能优化有哪些方法？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_58-你知道的react性能优化有哪些方法？","aria-hidden":"true"}},[t._v("#")]),t._v(" 58.你知道的react性能优化有哪些方法？")]),t._v(" "),s("ol",[s("li",[t._v("重写shouldComponentUpdate来避免不必要的dom操作。")]),t._v(" "),s("li",[t._v("使用 production 版本的react.js。")]),t._v(" "),s("li",[t._v("使用key来帮助React识别列表中所有子组件的最小变化。")])]),t._v(" "),s("h2",{attrs:{id:"_59-举例说明在react中怎么使用样式？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_59-举例说明在react中怎么使用样式？","aria-hidden":"true"}},[t._v("#")]),t._v(" 59.举例说明在react中怎么使用样式？")]),t._v(" "),s("ol",[s("li",[t._v("style双花括号")]),t._v(" "),s("li",[s("code",[t._v("import './style.scss';")]),t._v("引入全局样式")]),t._v(" "),s("li",[t._v("使用css-module")]),t._v(" "),s("li",[t._v("使用props传递参数的方式")])]),t._v(" "),s("h2",{attrs:{id:"_60-react有哪几种方法来处理表单输入？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_60-react有哪几种方法来处理表单输入？","aria-hidden":"true"}},[t._v("#")]),t._v(" 60.react有哪几种方法来处理表单输入？")]),t._v(" "),s("ol",[s("li",[t._v("使用ref属性获取表单的数据")]),t._v(" "),s("li",[t._v("使用onChange事件 通过event对象信息的方式 "),s("code",[t._v("e.target.value")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);