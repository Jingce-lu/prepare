(window.webpackJsonp=window.webpackJsonp||[]).push([[509],{864:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"prepare-react高频面5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prepare-react高频面5","aria-hidden":"true"}},[t._v("#")]),t._v(" Prepare React高频面5")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#prepare-react%E9%AB%98%E9%A2%91%E9%9D%A25"}},[t._v("Prepare React高频面5")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#1-%E8%AF%B7%E6%8F%8F%E8%BF%B0%E4%B8%8Breact%E7%9A%84%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6"}},[t._v("1. 请描述下react的事件机制")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#2react%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6"}},[t._v("2.React如何实现自己的事件机制？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%BB%84%E4%BB%B6%E6%8C%82%E8%BD%BD%E6%9B%B4%E6%96%B0%E6%97%B6"}},[t._v("组件挂载、更新时：")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BA%8B%E4%BB%B6%E5%88%9D%E5%A7%8B%E5%8C%96"}},[t._v("事件初始化：")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%A6%E5%8F%91%E4%BA%8B%E4%BB%B6%E6%97%B6"}},[t._v("触发事件时：")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#3react%E7%9A%84%E5%90%88%E6%88%90%E4%BA%8B%E4%BB%B6%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("3.React的合成事件是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#4react%E5%92%8C%E5%8E%9F%E7%94%9F%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F%E6%98%AF%E4%BB%80%E4%B9%88%E5%8F%AF%E4%BB%A5%E6%B7%B7%E7%94%A8%E5%90%97"}},[t._v("4.React和原生事件的执行顺序是什么？可以混用吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#5react%E4%B8%AD%E7%9A%84setstate%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E7%9A%84%E8%BF%87%E7%A8%8B%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("5.react中的setState批量更新的过程是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#6react%E4%B8%AD%E7%9A%84setstate%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88%E5%91%A2"}},[t._v("6.react中的setState执行机制是什么呢？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#7%E4%BD%A0%E6%98%AF%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3fiber%E7%9A%84"}},[t._v("7.你是如何理解fiber的?")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#9%E6%9C%89%E4%BD%BF%E7%94%A8%E8%BF%87consumer%E5%90%97"}},[t._v("9.有使用过Consumer吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#9react%E7%9A%84displayname%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8"}},[t._v("9.React的displayName有什么作用？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#10%E4%BD%A0%E5%AF%B9-time-slice%E7%9A%84%E7%90%86%E8%A7%A3"}},[t._v("10.你对 Time Slice的理解?")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#11redux%E4%B8%8Emobx%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("11.redux与mobx的区别?")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#12redux%E5%BC%82%E6%AD%A5%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%98%E5%8A%A3"}},[t._v("12.redux异步中间件之间的优劣?")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#13%E8%B0%83%E7%94%A8-setstate-%E4%B9%8B%E5%90%8E%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88"}},[t._v("13.调用 setState 之后发生了什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#14%E6%A6%82%E8%BF%B0%E4%B8%8B-react-%E4%B8%AD%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E9%80%BB%E8%BE%91"}},[t._v("14.概述下 React 中的事件处理逻辑")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#15react%E4%B8%8Eangularvue%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("15.react与angular、vue有什么区别？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#react%E6%A1%86%E6%9E%B6mvc"}},[t._v("react框架（MVC）")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#vue%E6%A1%86%E6%9E%B6mvvm"}},[t._v("vue框架（MVVM）")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#angular%E6%A1%86%E6%9E%B6"}},[t._v("angular框架")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#react%E4%B8%8Evue%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("react与vue的区别")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#vue%E4%B8%8Eangular%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("vue与angular的区别")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#react%E4%B8%8Eangular%E7%9A%84%E5%8C%BA%E5%88%AB"}},[t._v("react与angular的区别")])])])])])])]),t._v(" "),s("h2",{attrs:{id:"_1-请描述下react的事件机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-请描述下react的事件机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 请描述下react的事件机制")]),t._v(" "),s("p",[t._v("react内部事件系统实现可以分为两个阶段：事件注册、事件触发，涉及的主要类如下：")]),t._v(" "),s("ul",[s("li",[t._v("ReactEventListener：负责事件注册和事件分发。React将DOM事件全都注册到document节点上，事件分发主要调用dispatchEvent进行，从事件触发组件开始，向父元素遍历。")]),t._v(" "),s("li",[t._v("ReactEventEmitter：负责每个组件上事件的执行。")]),t._v(" "),s("li",[t._v("EventPluginHub：负责回调函数的存储")])]),t._v(" "),s("br"),t._v(" "),s("ul",[s("li",[t._v("react事件机制分为两个部分：1、事件注册 2、事件分发")]),t._v(" "),s("li",[t._v("事件注册部分，所有的事件都会注册到document上，拥有统一的回调函数dispatchEvent来执行事件分发")]),t._v(" "),s("li",[t._v("事件分发部分，首先生成合成事件，注意同一种事件类型只能生成一个合成事件Event，如onclick这个类型的事件，dom上所有带有通过jsx绑定的onClick的回调函数都会按顺序（冒泡或者捕获）会放到Event._dispatchListeners 这个数组里，后面依次执行它。")])]),t._v(" "),s("h2",{attrs:{id:"_2-react如何实现自己的事件机制？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-react如何实现自己的事件机制？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.React如何实现自己的事件机制？")]),t._v(" "),s("p",[t._v("React如何实现自己的事件机制？\nReact事件并没有绑定在真实的 Dom节点上，而是通过事件代理，在最外层的 document上对事件进行统一分发。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/images/prepare/react/1909153.jpg"),alt:"images/prepare/react/1909153.jpg"}}),t._v(" "),s("h3",{attrs:{id:"组件挂载、更新时："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件挂载、更新时：","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件挂载、更新时：")]),t._v(" "),s("ul",[s("li",[t._v("通过 "),s("code",[t._v("lastProps")]),t._v("、 "),s("code",[t._v("nextProps")]),t._v("判断是否新增、删除事件分别调用事件注册、卸载方法。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("EventPluginHub")]),t._v("的 "),s("code",[t._v("enqueuePutListener")]),t._v("进行事件存储")]),t._v(" "),s("li",[t._v("获取 "),s("code",[t._v("document")]),t._v("对象。")]),t._v(" "),s("li",[t._v("根据事件名称（如 "),s("code",[t._v("onClick")]),t._v("、 "),s("code",[t._v("onCaptureClick")]),t._v("）判断是进行冒泡还是捕获。")]),t._v(" "),s("li",[t._v("判断是否存在 "),s("code",[t._v("addEventListener")]),t._v("方法，否则使用 "),s("code",[t._v("attachEvent")]),t._v("（兼容IE）。")]),t._v(" "),s("li",[t._v("给 "),s("code",[t._v("document")]),t._v("注册原生事件回调为 "),s("code",[t._v("dispatchEvent")]),t._v("(统一的事件分发机制）。")])]),t._v(" "),s("h3",{attrs:{id:"事件初始化："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件初始化：","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件初始化：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("EventPluginHub")]),t._v("负责管理 "),s("code",[t._v("React")]),t._v("合成事件的 "),s("code",[t._v("callback")]),t._v("，它将 "),s("code",[t._v("callback")]),t._v("存储在 "),s("code",[t._v("listenerBank")]),t._v("中，另外还存储了负责合成事件的 "),s("code",[t._v("Plugin")]),t._v("。")]),t._v(" "),s("li",[t._v("获取绑定事件的元素的唯一标识 "),s("code",[t._v("key")]),t._v("。")]),t._v(" "),s("li",[t._v("将 "),s("code",[t._v("callback")]),t._v("根据事件类型，元素的唯一标识 "),s("code",[t._v("key")]),t._v("存储在 "),s("code",[t._v("listenerBank")]),t._v("中。")]),t._v(" "),s("li",[s("code",[t._v("listenerBank")]),t._v("的结构是： "),s("code",[t._v("listenerBank[registrationName][key]")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"触发事件时："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发事件时：","aria-hidden":"true"}},[t._v("#")]),t._v(" 触发事件时：")]),t._v(" "),s("ul",[s("li",[t._v("触发 "),s("code",[t._v("document")]),t._v("注册原生事件的回调 "),s("code",[t._v("dispatchEvent")])]),t._v(" "),s("li",[t._v("获取到触发这个事件最深一级的元素")]),t._v(" "),s("li",[t._v("遍历这个元素的所有父元素，依次对每一级元素进行处理。")]),t._v(" "),s("li",[t._v("构造合成事件。")]),t._v(" "),s("li",[t._v("将每一级的合成事件存储在 "),s("code",[t._v("eventQueue")]),t._v("事件队列中。")]),t._v(" "),s("li",[t._v("遍历 "),s("code",[t._v("eventQueue")]),t._v("。")]),t._v(" "),s("li",[t._v("通过 "),s("code",[t._v("isPropagationStopped")]),t._v("判断当前事件是否执行了阻止冒泡方法。")]),t._v(" "),s("li",[t._v("如果阻止了冒泡，停止遍历，否则通过 executeDispatch执行合成事件。")]),t._v(" "),s("li",[t._v("释放处理完成的事件。")])]),t._v(" "),s("blockquote",[s("p",[t._v("React在自己的合成事件中重写了 "),s("code",[t._v("stopPropagation")]),t._v("方法，将 "),s("code",[t._v("isPropagationStopped")]),t._v("设置为 "),s("code",[t._v("true")]),t._v("，然后在遍历每一级事件的过程中根据此遍历判断是否继续执行。"),s("code",[t._v("这就是 React自己实现的冒泡机制")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"_3-react的合成事件是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-react的合成事件是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.React的合成事件是什么？")]),t._v(" "),s("p",[t._v("React 根据 W3C 规范定义了每个事件处理函数的参数，即合成事件。")]),t._v(" "),s("p",[t._v("事件处理程序将传递 "),s("code",[t._v("SyntheticEvent")]),t._v(" 的实例，这是一个跨浏览器原生事件包装器。它具有与浏览器原生事件相同的接口，包括 "),s("code",[t._v("stopPropagation()")]),t._v(" 和 "),s("code",[t._v("preventDefault()")]),t._v("，在所有浏览器中他们工作方式都相同。")]),t._v(" "),s("p",[t._v("React合成的 "),s("code",[t._v("SyntheticEvent")]),t._v("采用了事件池，这样做可以大大节省内存，而不会频繁的创建和销毁事件对象。")]),t._v(" "),s("p",[t._v("另外，不管在什么浏览器环境下，浏览器会将该事件类型统一创建为合成事件，从而达到了浏览器兼容的目的。")]),t._v(" "),s("h2",{attrs:{id:"_4-react和原生事件的执行顺序是什么？可以混用吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-react和原生事件的执行顺序是什么？可以混用吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.React和原生事件的执行顺序是什么？可以混用吗？")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v("的所有事件都通过 "),s("code",[t._v("document")]),t._v("进行统一分发。当真实 Dom触发事件后冒泡到 "),s("code",[t._v("document")]),t._v("后才会对 "),s("code",[t._v("React")]),t._v("事件进行处理。")]),t._v(" "),s("p",[t._v("所以原生的事件会先执行，然后执行 "),s("code",[t._v("React")]),t._v("合成事件，最后执行真正在 "),s("code",[t._v("document")]),t._v("上挂载的事件")]),t._v(" "),s("p",[s("code",[t._v("React")]),t._v("事件和原生事件最好不要混用。原生事件中如果执行了 "),s("code",[t._v("stopPropagation")]),t._v("方法，则会导致其他 "),s("code",[t._v("React")]),t._v("事件失效。因为所有元素的事件将无法冒泡到 "),s("code",[t._v("document")]),t._v("上，导致所有的 "),s("code",[t._v("React")]),t._v("事件都将无法被触发。。")]),t._v(" "),s("h2",{attrs:{id:"_5-react中的setstate批量更新的过程是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-react中的setstate批量更新的过程是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.react中的setState批量更新的过程是什么？")]),t._v(" "),s("p",[t._v("在React的生命周期和合成事件执行前后都有相应的钩子，分别是"),s("code",[t._v("pre钩子")]),t._v("和"),s("code",[t._v("post钩子")]),t._v("，pre钩子会调用"),s("code",[t._v("batchedUpdate")]),t._v("方法将"),s("code",[t._v("isBatchingUpdates")]),t._v("变量置为"),s("code",[t._v("true")]),t._v("，开启批量更新，而post钩子会将"),s("code",[t._v("isBatchingUpdates")]),t._v("置为"),s("code",[t._v("false")])]),t._v(" "),s("p",[s("code",[t._v("isBatchingUpdates")]),t._v("变量置为true，则会走批量更新分支，setState的更新会被存入队列中，待同步代码执行完后，再执行队列中的state更新。")]),t._v(" "),s("p",[t._v("而在原生事件和异步操作中，不会执行pre钩子，或者生命周期的中的异步操作之前执行了pre钩子，但是pos钩子也在异步操作之前执行完了，"),s("code",[t._v("isBatchingUpdates")]),t._v("必定为false，也就不会进行批量更新。")]),t._v(" "),s("h2",{attrs:{id:"_6-react中的setstate执行机制是什么呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-react中的setstate执行机制是什么呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 6.react中的setState执行机制是什么呢？")]),t._v(" "),s("p",[t._v("React中的setState有Batch模式(批量更新模式)和普通模式。")]),t._v(" "),s("p",[t._v("普通模式下,setState能够即时更新state，重新调用 render 方法，然后把render方法所渲染的最新的内容显示到页面上。")]),t._v(" "),s("p",[t._v("Batch模式下,React不会立刻修改state。而是把这个对象放到一个更新队列中，稍后才会从队列中把新的状态提取出来合并到 state中，然后再触发组件更新。")]),t._v(" "),s("ol",[s("li",[t._v("由 React 控制的事件处理过程 setState 不会同步更新 this.state。如我们使用React库中的表单组件，例如 select、input、button等，它都是处于React库的控制之下，因此setState会以异步的方式执行。")]),t._v(" "),s("li",[t._v("React 控制之外的情况， setState 会同步更新 this.state。通过JavaScript原生addEventListener直接添加的事件处理函数，使用setTimeout/setInterval 等setState会以同步的方式执行。")])]),t._v(" "),s("h2",{attrs:{id:"_7-你是如何理解fiber的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-你是如何理解fiber的","aria-hidden":"true"}},[t._v("#")]),t._v(" 7.你是如何理解fiber的?")]),t._v(" "),s("p",[t._v("React Fiber 是一种基于浏览器的"),s("strong",[t._v("单线程调度算法")]),t._v(".")]),t._v(" "),s("p",[t._v("React 16之前 ，"),s("code",[t._v("reconcilation")]),t._v(" 算法实际上是递归，想要中断递归是很困难的，React 16 开始使用了循环来代替之前的递归.")]),t._v(" "),s("p",[s("code",[t._v("Fiber")]),t._v("："),s("strong",[t._v("一种将 "),s("code",[t._v("recocilation")]),t._v(" （递归 diff），拆分成无数个小任务的算法；它随时能够停止，恢复。停止恢复的时机取决于当前的一帧（16ms）内，还有没有足够的时间允许计算")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_9-有使用过consumer吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-有使用过consumer吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 9.有使用过Consumer吗？")]),t._v(" "),s("p",[t._v("当 Provider 提供的值更改时，Consumer 必须重新渲染")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createContext "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建Context的唯一方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ThemeContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" theme "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用 Context.Provider 包裹后续组件，value 指定值 ")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ThemeContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 当Context的Provider值更改时，Consumer 的值必须重新渲染 */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("按钮"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Middle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Middle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ThemeContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bottom")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Context.Consumer Consumer消费者使用Context得值")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但子组件不能是其他组件，必须渲染一个函数，函数的参数就是Context得值")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ThemeContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Consumer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("theme")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("ThemeContext 的 值为 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("theme"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ThemeContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Consumer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Middle")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Bottom"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Bottom"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br")])]),s("h2",{attrs:{id:"_9-react的displayname有什么作用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-react的displayname有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 9.React的displayName有什么作用？")]),t._v(" "),s("p",[t._v("定义调试时的组件name")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withHOC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("WrapComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处未定义名称或者希望动态定义名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("extends")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义displayName")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" displayName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("withHOC(")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("WrapComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("displayName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" WrapComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"inside HOC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WrapComponent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("this"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nApp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withHOC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("如果未定义displayName，那么进行调试的时候，就会显示如下：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// react自动定义名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("_class2\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("App\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("定义displayName后，显示如下：")]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("withHOC")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("App\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"_10-你对-time-slice的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-你对-time-slice的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 10.你对 Time Slice的理解?")]),t._v(" "),s("p",[t._v("时间分片")]),t._v(" "),s("ul",[s("li",[t._v("React 在渲染（render）的时候，不会阻塞现在的线程")]),t._v(" "),s("li",[t._v("如果你的设备足够快，你会感觉渲染是同步的")]),t._v(" "),s("li",[t._v("如果你设备非常慢，你会感觉还算是灵敏的")]),t._v(" "),s("li",[t._v("虽然是异步渲染，但是你将会看到完整的渲染，而不是一个组件一行行的渲染出来")]),t._v(" "),s("li",[t._v("同样书写组件的方式")])]),t._v(" "),s("h2",{attrs:{id:"_11-redux与mobx的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-redux与mobx的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 11.redux与mobx的区别?")]),t._v(" "),s("p",[t._v("两者对比:")]),t._v(" "),s("ul",[s("li",[t._v("redux将数据保存在单一的store中，mobx将数据保存在分散的多个store中")]),t._v(" "),s("li",[t._v("redux使用plain object保存数据，需要手动处理变化后的操作；mobx适用observable保存数据，数据变化后自动处理响应的操作")]),t._v(" "),s("li",[t._v("redux使用不可变状态，这意味着状态是只读的，不能直接去修改它，而是应该返回一个新的状态，同时使用纯函数；mobx中的状态是可变的，可以直接对其进行修改")]),t._v(" "),s("li",[t._v("mobx相对来说比较简单，在其中有很多的抽象，mobx更多的使用面向对象的编程思维；redux会比较复杂，因为其中的函数式编程思想掌握起来不是那么容易，同时需要借助一系列的中间件来处理异步和副作用")]),t._v(" "),s("li",[t._v("mobx中有更多的抽象和封装，调试会比较困难，同时结果也难以预测；而redux提供能够进行时间回溯的开发工具，同时其纯函数以及更少的抽象，让调试变得更加的容易")])]),t._v(" "),s("p",[t._v("场景辨析:")]),t._v(" "),s("p",[t._v("基于以上区别,我们可以简单得分析一下两者的不同使用场景.")]),t._v(" "),s("ul",[s("li",[t._v("mobx更适合数据不复杂的应用: mobx难以调试,很多状态无法回溯,面对复杂度高的应用时,往往力不从心.")]),t._v(" "),s("li",[t._v("redux适合有回溯需求的应用: 比如一个画板应用、一个表格应用，很多时候需要撤销、重做等操作，由于redux不可变的特性，天然支持这些操作.")]),t._v(" "),s("li",[t._v("mobx适合短平快的项目: mobx上手简单,样板代码少,可以很大程度上提高开发效率.")]),t._v(" "),s("li",[t._v("当然mobx和redux也并不一定是非此即彼的关系,你也可以在项目中用redux作为全局状态管理,用mobx作为组件局部状态管理器来用.")])]),t._v(" "),s("h2",{attrs:{id:"_12-redux异步中间件之间的优劣"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-redux异步中间件之间的优劣","aria-hidden":"true"}},[t._v("#")]),t._v(" 12.redux异步中间件之间的优劣?")]),t._v(" "),s("p",[s("strong",[t._v("redux-thunk优点")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("体积小: redux-thunk的实现方式很简单,只有不到20行代码")]),t._v(" "),s("li",[t._v("使用简单: redux-thunk没有引入像redux-saga或者redux-observable额外的范式,上手简单")])]),t._v(" "),s("p",[s("strong",[t._v("redux-thunk缺陷:")])]),t._v(" "),s("ul",[s("li",[t._v("样板代码过多: 与redux本身一样,通常一个请求需要大量的代码,而且很多都是重复性质的")]),t._v(" "),s("li",[t._v("耦合严重: 异步操作与redux的action偶合在一起,不方便管理")]),t._v(" "),s("li",[t._v("功能孱弱: 有一些实际开发中常用的功能需要自己进行封装")])]),t._v(" "),s("p",[s("strong",[t._v("redux-saga优点:")])]),t._v(" "),s("ul",[s("li",[t._v("异步解耦: 异步操作被被转移到单独 saga.js 中，不再是掺杂在 action.js 或 component.js 中")]),t._v(" "),s("li",[t._v("action摆脱thunk function: dispatch 的参数依然是一个纯粹的 action (FSA)，而不是充满 “黑魔法” thunk function")]),t._v(" "),s("li",[t._v("异常处理: 受益于 generator function 的 saga 实现，代码异常/请求失败 都可以直接通过 try/catch 语法直接捕获处理")]),t._v(" "),s("li",[t._v("功能强大: redux-saga提供了大量的Saga 辅助函数和Effect 创建器供开发者使用,开发者无须封装或者简单封装即可使用")]),t._v(" "),s("li",[t._v("灵活: redux-saga可以将多个Saga可以串行/并行组合起来,形成一个非常实用的异步flow")]),t._v(" "),s("li",[t._v("易测试: 提供了各种case的测试方案，包括mock task，分支覆盖等等")])]),t._v(" "),s("p",[s("strong",[t._v("redux-saga缺陷:")])]),t._v(" "),s("ul",[s("li",[t._v("额外的学习成本: redux-saga不仅在使用难以理解的 generator function,而且有数十个API,学习成本远超redux-thunk,最重要的是你的额外学习成本是只服务于这个库的,与redux-observable不同,redux-observable虽然也有额外学习成本但是背后是rxjs和一整套思想")]),t._v(" "),s("li",[t._v("体积庞大: 体积略大,代码近2000行，min版25KB左右")]),t._v(" "),s("li",[t._v("功能过剩: 实际上并发控制等功能很难用到,但是我们依然需要引入这些代码")]),t._v(" "),s("li",[t._v("ts支持不友好: yield无法返回TS类型")])]),t._v(" "),s("p",[s("strong",[t._v("redux-observable优点:")])]),t._v(" "),s("ul",[s("li",[t._v("功能最强: 由于背靠rxjs这个强大的响应式编程的库,借助rxjs的操作符,你可以几乎做任何你能想到的异步处理")]),t._v(" "),s("li",[t._v("背靠rxjs: 由于有rxjs的加持,如果你已经学习了rxjs,redux-observable的学习成本并不高,而且随着rxjs的升级redux-observable也会变得更强大")])]),t._v(" "),s("p",[s("strong",[t._v("redux-observable缺陷:")])]),t._v(" "),s("ul",[s("li",[t._v("学习成本奇高: 如果你不会rxjs,则需要额外学习两个复杂的库")]),t._v(" "),s("li",[t._v("社区一般: redux-observable的下载量只有redux-saga的1/5,社区也不够活跃,在复杂异步流中间件这个层面redux-saga仍处于领导地位")])]),t._v(" "),s("h2",{attrs:{id:"_13-调用-setstate-之后发生了什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-调用-setstate-之后发生了什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 13.调用 setState 之后发生了什么？")]),t._v(" "),s("p",[t._v("在代码中调用setState函数之后，React 会将传入的参数对象与组件当前的状态合并，然后触发所谓的调和过程（Reconciliation）。经过调和过程，React 会以相对高效的方式根据新的状态构建 React 元素树并且着手重新渲染整个UI界面。在 React 得到元素树之后，React 会自动计算出新的树与老树的节点差异，然后根据差异对界面进行最小化重渲染。在差异计算算法中，React 能够相对精确地知道哪些位置发生了改变以及应该如何改变，这就保证了按需更新，而不是全部重新渲染。")]),t._v(" "),s("h2",{attrs:{id:"_14-概述下-react-中的事件处理逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-概述下-react-中的事件处理逻辑","aria-hidden":"true"}},[t._v("#")]),t._v(" 14.概述下 React 中的事件处理逻辑")]),t._v(" "),s("p",[t._v("为了解决跨浏览器兼容性问题，React 会将浏览器原生事件（Browser Native Event）封装为合成事件（SyntheticEvent）传入设置的事件处理器中。这里的合成事件提供了与原生事件相同的接口，不过它们屏蔽了底层浏览器的细节差异，保证了行为的一致性。另外有意思的是，React 并没有直接将事件附着到子元素上，而是以单一事件监听器的方式将所有的事件发送到顶层进行处理。这样 React 在更新 DOM 的时候就不需要考虑如何去处理附着在 DOM 上的事件监听器，最终达到优化性能的目的。")]),t._v(" "),s("h2",{attrs:{id:"_15-react与angular、vue有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-react与angular、vue有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 15.react与angular、vue有什么区别？")]),t._v(" "),s("h3",{attrs:{id:"react框架（mvc）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react框架（mvc）","aria-hidden":"true"}},[t._v("#")]),t._v(" react框架（MVC）")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("jsx语法创建虚拟DOM，极速的渲染性能")]),t._v(" "),s("li",[t._v("组件化开发，组件独立，方便重复使用")]),t._v(" "),s("li",[t._v("单向数据流")]),t._v(" "),s("li",[t._v("组件生命周期")]),t._v(" "),s("li",[t._v("跨浏览器兼容性好")])]),t._v(" "),s("p",[t._v("缺点:")]),t._v(" "),s("ul",[s("li",[t._v("不适合单独做一个完整的框架")])]),t._v(" "),s("p",[t._v("应用场景：个性化需求、中型应用")]),t._v(" "),s("h3",{attrs:{id:"vue框架（mvvm）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue框架（mvvm）","aria-hidden":"true"}},[t._v("#")]),t._v(" vue框架（MVVM）")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("轻量级框架，语法简单，学习成本低")]),t._v(" "),s("li",[t._v("双向数据绑定")]),t._v(" "),s("li",[t._v("组件化开发")]),t._v(" "),s("li",[t._v("数据和结构的分离")]),t._v(" "),s("li",[t._v("虚拟DOM")]),t._v(" "),s("li",[t._v("运行速度快")]),t._v(" "),s("li",[t._v("灵活渐进式框架")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("不支持IE8")]),t._v(" "),s("li",[t._v("生态环境差，不如angular和react")]),t._v(" "),s("li",[t._v("不适合偏大型的项目")])]),t._v(" "),s("p",[t._v("应用场景：小型应用")]),t._v(" "),s("h3",{attrs:{id:"angular框架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angular框架","aria-hidden":"true"}},[t._v("#")]),t._v(" angular框架")]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("模板功能强大丰富，并且是声明式的，自带了丰富的Angular指令；")]),t._v(" "),s("li",[t._v("是一个比较完善的前端框架，包含服务，模板，数据双向绑定，模块化，路由，过滤器，依赖注入等所有功能；")]),t._v(" "),s("li",[t._v("自定义指令，自定义指令后可以在项目中多次使用。")]),t._v(" "),s("li",[t._v("ng模块化比较大胆的引入了Java的一些东西（依赖注入）")]),t._v(" "),s("li",[t._v("双向绑定（脏检查机制）")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[t._v("验证功能错误信息显示比较薄弱，需要写很多模板标签")]),t._v(" "),s("li",[t._v("ng提倡在控制器里面不要有操作DOM的代码，对于一些jQuery 插件的使用，如果想不破坏代码的整洁性，需要写一些directive去封装插件")]),t._v(" "),s("li",[t._v("从1.0.X升级到1.2.X，貌似有比较大的调整，没有完美兼容低版本，升级之后可能会导致一个兼容性的BUG")]),t._v(" "),s("li",[t._v("AngularJS 太笨重了，没有让用户选择一个轻量级的版本，当然1.2.X后，Angular也在做一些更改，比如把route，animate等模块独立出去，让用户自己去选择。")])]),t._v(" "),s("p",[t._v("应用场景：在大型超大型web应用开发上。")]),t._v(" "),s("h3",{attrs:{id:"react与vue的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react与vue的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" react与vue的区别")]),t._v(" "),s("p",[t._v("相同点：")]),t._v(" "),s("ol",[s("li",[t._v("react和vue都是用虚拟DOM Virtual DOM")]),t._v(" "),s("li",[t._v("中心思想相同：一切都是组件，组件实例之间可以嵌套")]),t._v(" "),s("li",[t._v("都有着合理的钩子函数")]),t._v(" "),s("li",[t._v("都不内置ajax、route等核心包，以插件的形式加载")]),t._v(" "),s("li",[t._v("都有配套的路由和负责处理全局状态管理的库；")])]),t._v(" "),s("p",[t._v("不同点：")]),t._v(" "),s("ol",[s("li",[t._v("React使用JSX渲染页面，Vue使用简单的模板")]),t._v(" "),s("li",[t._v("Vue双向数据流，React单向数据流")]),t._v(" "),s("li",[t._v("Vue.js在模板中提供了指令，过滤器等，可以非常方便，快捷地操作DOM。")]),t._v(" "),s("li",[t._v("Vue比react运行更快")])]),t._v(" "),s("h3",{attrs:{id:"vue与angular的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue与angular的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" vue与angular的区别")]),t._v(" "),s("p",[t._v("相同点：")]),t._v(" "),s("ol",[s("li",[t._v("都支持指令：内置指令和自定义指令。")]),t._v(" "),s("li",[t._v("都支持过滤器：内置过滤器和自定义过滤器。")]),t._v(" "),s("li",[t._v("都支持双向数据绑定。")]),t._v(" "),s("li",[t._v("都不支持低端浏览器。")]),t._v(" "),s("li",[t._v("vue和angular绑定都可以用"),s("code",[t._v("{{}}")])])]),t._v(" "),s("p",[t._v("不同点")]),t._v(" "),s("ol",[s("li",[t._v("vue相当于angular要变得小巧很多，运行速度比angular快")]),t._v(" "),s("li",[t._v("vue指令用v-xxx，angular用ng-xxx")]),t._v(" "),s("li",[t._v("vue中数据放在data对象里面，angular数据绑定在$scope上面")]),t._v(" "),s("li",[t._v("vue有组件化概念，angular中没有")]),t._v(" "),s("li",[t._v("AngularJS的学习成本高，比如增加了Dependency Injection特性，而Vue.js本身提供的API都比较简单、直观")]),t._v(" "),s("li",[t._v("在性能上，AngularJS依赖对数据做脏检查，所以Watcher越多越慢。 Vue.js使用基于依赖追踪的观察并且使用异步队列更新。所有的数据都是独立触发的")])]),t._v(" "),s("h3",{attrs:{id:"react与angular的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react与angular的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" react与angular的区别")]),t._v(" "),s("p",[t._v("相同点：")]),t._v(" "),s("ul",[s("li",[t._v("都是单向数据流")])]),t._v(" "),s("p",[t._v("不同点：")]),t._v(" "),s("ul",[s("li",[t._v("React中没有指令，angular则提供了丰富的指令")])])])}),[],!1,null,null,null);a.default=r.exports}}]);