(window.webpackJsonp=window.webpackJsonp||[]).push([[494],{946:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"add-2020-浏览器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-2020-浏览器","aria-hidden":"true"}},[t._v("#")]),t._v(" Add 2020 浏览器")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1-在浏览器中输入-url-到页面显示出来的过程发生了什么？"}},[t._v("1. 在浏览器中输入 url 到页面显示出来的过程发生了什么？")])]),a("li",[a("a",{attrs:{href:"#_2-浏览器的渲染机制"}},[t._v("2. 浏览器的渲染机制")])]),a("li",[a("a",{attrs:{href:"#_3-load-和-domcontentloaded-区别"}},[t._v("3. Load 和 DOMContentLoaded 区别")])]),a("li",[a("a",{attrs:{href:"#_4-重绘（repaint）和回流（reflow）"}},[t._v("4. 重绘（Repaint）和回流（Reflow）")])]),a("li",[a("a",{attrs:{href:"#_5-减少重绘和回流"}},[t._v("5. 减少重绘和回流")])]),a("li",[a("a",{attrs:{href:"#_6-事件触发三阶段"}},[t._v("6. 事件触发三阶段")])]),a("li",[a("a",{attrs:{href:"#_7-注册事件"}},[t._v("7. 注册事件")])]),a("li",[a("a",{attrs:{href:"#_8-事件代理"}},[t._v("8. 事件代理")])]),a("li",[a("a",{attrs:{href:"#_9-预加载、预渲染"}},[t._v("9. 预加载、预渲染")]),a("ul",[a("li",[a("a",{attrs:{href:"#预加载"}},[t._v("预加载")])]),a("li",[a("a",{attrs:{href:"#预渲染"}},[t._v("预渲染")])])])]),a("li",[a("a",{attrs:{href:"#_10-如何刷新浏览器的应用缓存？"}},[t._v("10. 如何刷新浏览器的应用缓存？")])]),a("li",[a("a",{attrs:{href:"#_11-cdn-缓存"}},[t._v("11. CDN 缓存")]),a("ul",[a("li",[a("a",{attrs:{href:"#cdn-缓存介绍"}},[t._v("CDN 缓存介绍")])]),a("li",[a("a",{attrs:{href:"#cdn-缓存策略"}},[t._v("CDN 缓存策略")])]),a("li",[a("a",{attrs:{href:"#cdn-缓存的不足"}},[t._v("CDN 缓存的不足")])])])]),a("li",[a("a",{attrs:{href:"#_12-http2"}},[t._v("12. HTTP2")])]),a("li",[a("a",{attrs:{href:"#_13-简单讲解一下-http2-的多路复用"}},[t._v("13. 简单讲解一下 http2 的多路复用")])]),a("li",[a("a",{attrs:{href:"#_14-http-状态码"}},[t._v("14. HTTP 状态码")])]),a("li",[a("a",{attrs:{href:"#_15-tcp-三次握手和四次挥手"}},[t._v("15. TCP 三次握手和四次挥手")])]),a("li",[a("a",{attrs:{href:"#_16-跨域时如何处理-cookie"}},[t._v("16. 跨域时如何处理 cookie")])]),a("li",[a("a",{attrs:{href:"#_17-垃圾回收机制"}},[t._v("17. 垃圾回收机制")])]),a("li",[a("a",{attrs:{href:"#_18-开发过程中遇到的内存泄露情况"}},[t._v("18. 开发过程中遇到的内存泄露情况")]),a("ul",[a("li",[a("a",{attrs:{href:"#定义"}},[t._v("定义")])]),a("li",[a("a",{attrs:{href:"#内存泄露的几种情况"}},[t._v("内存泄露的几种情况:")])])])]),a("li",[a("a",{attrs:{href:"#_19-js-事件轮询、微任务和宏任务"}},[t._v("19. js 事件轮询、微任务和宏任务")])]),a("li",[a("a",{attrs:{href:"#_20-微信网页版登录机制"}},[t._v("20. 微信网页版登录机制")])]),a("li",[a("a",{attrs:{href:"#_21-https-的传输过程"}},[t._v("21. https 的传输过程")])]),a("li",[a("a",{attrs:{href:"#_22-tcp-和-udp-区别"}},[t._v("22. tcp 和 udp 区别")])]),a("li",[a("a",{attrs:{href:"#_23-tcp-怎么保证可靠性"}},[t._v("23. tcp 怎么保证可靠性")])]),a("li",[a("a",{attrs:{href:"#_24-浏览器的机制你了解多少"}},[t._v("24. 浏览器的机制你了解多少")])]),a("li",[a("a",{attrs:{href:"#_25-unicode-utf8-utf16-有什么区别"}},[t._v("25. unicode utf8 utf16 有什么区别")])]),a("li",[a("a",{attrs:{href:"#_26-缓存以键值形式存在浏览器，键是什么，值是什么"}},[t._v("26. 缓存以键值形式存在浏览器，键是什么，值是什么")])]),a("li",[a("a",{attrs:{href:"#_27-讲解一下-https-对称加密和非对称加密"}},[t._v("27. 讲解一下 https 对称加密和非对称加密")])]),a("li",[a("a",{attrs:{href:"#_28-如何优化网页上需要展示的超大图片，从请求和性能来解释"}},[t._v("28. 如何优化网页上需要展示的超大图片，从请求和性能来解释")])]),a("li",[a("a",{attrs:{href:"#_29-实现-adblock-的策略"}},[t._v("29. 实现 Adblock 的策略")])]),a("li",[a("a",{attrs:{href:"#_30-dom0、dom2、dom3-事件"}},[t._v("30. dom0、dom2、dom3 事件")]),a("ul",[a("li",[a("a",{attrs:{href:"#_0-级-dom-分为-2-个："}},[t._v("0 级 DOM 分为 2 个：")])]),a("li",[a("a",{attrs:{href:"#_2-级-dom"}},[t._v("2 级 DOM")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"_1-在浏览器中输入-url-到页面显示出来的过程发生了什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-在浏览器中输入-url-到页面显示出来的过程发生了什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 在浏览器中输入 url 到页面显示出来的过程发生了什么？")]),t._v(" "),a("p",[t._v("主要过程是："),a("br"),t._v("\n浏览器解析 -> 查询缓存 -> dns 查询 -> 建立链接 -> 服务器处理请求 -> 服务器发送响应 -> 客户端收到页面 -> 解析 HTML -> 构建渲染树 -> 开始显示内容(白屏时间) -> 首屏内容加载完成(首屏时间) -> 用户可交户(DOMContentLoaded) -> 加载完成(load)")]),t._v(" "),a("ul",[a("li",[t._v("用户在浏览器中输入网址后，浏览器会先对输入的地址进行解析。比如用的协议 "),a("code",[t._v("http")]),t._v(" 还是 "),a("code",[t._v("https")])]),t._v(" "),a("li",[t._v("之后会根据域名进行 IP 的寻址\n"),a("ul",[a("li",[t._v("寻址先从缓存开始，如 host")]),t._v(" "),a("li",[t._v("之后再访问 DNS 服务器，一层一层直至访问到根服务器")]),t._v(" "),a("li",[t._v("服务器再把 IP 告诉客户端")])])]),t._v(" "),a("li",[t._v("客户端拿到 IP 后发起请求\n"),a("ul",[a("li",[t._v("与服务器进行 HTTP 连接建立（3 次握手）")])])]),t._v(" "),a("li",[t._v("建立成功后服务器返回数据，浏览器进行渲染\n"),a("ul",[a("li",[t._v("DOM 树构建、CSSOM 树的构建、JavaScript 资源下载\n"),a("ul",[a("li",[t._v("CSS 的重排重绘，CSSOM 与 DOM 一起进行绘制")]),t._v(" "),a("li",[t._v("JavaScript 资源的阻塞")])])])])]),t._v(" "),a("li",[t._v("渲染出页面")])]),t._v(" "),a("h2",{attrs:{id:"_2-浏览器的渲染机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器的渲染机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 浏览器的渲染机制")]),t._v(" "),a("p",[t._v("浏览器的渲染机制一般分为以下几个步骤")]),t._v(" "),a("ol",[a("li",[t._v("处理 HTML 并构建 DOM 树。")]),t._v(" "),a("li",[t._v("处理 CSS 构建 CSSOM 树。")]),t._v(" "),a("li",[t._v("将 DOM 与 CSSOM 合并成一个渲染树。")]),t._v(" "),a("li",[t._v("根据渲染树来布局，计算每个节点的位置。")]),t._v(" "),a("li",[t._v("调用 GPU 绘制，合成图层，显示在屏幕上。")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/safety/浏览器/04.png"),alt:"images/safety/浏览器/04.png"}}),t._v(" "),a("p",[t._v("在构建 CSSOM 树时，会阻塞渲染，直至 CSSOM 树构建完成。并且构建 CSSOM 树是一个十分消耗性能的过程，所以应该尽量保证层级扁平，减少过度层叠，越是具体的 CSS 选择器，执行速度越慢。")]),t._v(" "),a("p",[t._v("当 HTML 解析到 script 标签时，会暂停构建 DOM，完成后才会从暂停的地方重新开始。也就是说，如果你想首屏渲染的越快，就越不应该在首屏就加载 JS 文件。并且 CSS 也会影响 JS 的执行，只有当解析完样式表才会执行 JS，所以也可以认为这种情况下，CSS 也会暂停构建 DOM。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/safety/浏览器/05.png"),alt:"images/safety/浏览器/05.png"}}),t._v(" "),a("h2",{attrs:{id:"_3-load-和-domcontentloaded-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-load-和-domcontentloaded-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Load 和 DOMContentLoaded 区别")]),t._v(" "),a("p",[t._v("Load 事件触发代表页面中的 DOM，CSS，JS，图片已经全部加载完毕。")]),t._v(" "),a("p",[t._v("DOMContentLoaded 事件触发代表初始的 HTML 被完全加载和解析，不需要等待 CSS，JS，图片加载。")]),t._v(" "),a("h2",{attrs:{id:"_4-重绘（repaint）和回流（reflow）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-重绘（repaint）和回流（reflow）","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 重绘（Repaint）和回流（Reflow）")]),t._v(" "),a("p",[a("strong",[t._v("触发重排: 页面布局和元素几何属性的改变就会导致重排")])]),t._v(" "),a("p",[t._v("重绘和回流是渲染步骤中的一小节，但是这两个步骤对于性能影响很大。")]),t._v(" "),a("ul",[a("li",[t._v("重绘是当节点需要更改外观而不会影响布局的，比如改变 color, background-color 就叫称为重绘")]),t._v(" "),a("li",[t._v("回流是布局或者几何属性需要改变就称为回流。")])]),t._v(" "),a("p",[t._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。")]),t._v(" "),a("p",[t._v("会触发回流的操作:")]),t._v(" "),a("ul",[a("li",[t._v("页面初次渲染")]),t._v(" "),a("li",[t._v("浏览器窗口大小改变")]),t._v(" "),a("li",[t._v("元素尺寸、位置、内容发生改变")]),t._v(" "),a("li",[t._v("元素字体大小变化")]),t._v(" "),a("li",[t._v("添加或者删除可见的 dom 元素")]),t._v(" "),a("li",[t._v("激活 CSS 伪类（例如：:hover）")]),t._v(" "),a("li",[t._v("查询某些属性或调用某些方法")]),t._v(" "),a("li",[t._v("clientWidth、clientHeight、clientTop、clientLeft")]),t._v(" "),a("li",[t._v("offsetWidth、offsetHeight、offsetTop、offsetLeft")]),t._v(" "),a("li",[t._v("scrollWidth、scrollHeight、scrollTop、scrollLeft")]),t._v(" "),a("li",[t._v("getComputedStyle()")]),t._v(" "),a("li",[t._v("getBoundingClientRect()")]),t._v(" "),a("li",[t._v("scrollTo()")])]),t._v(" "),a("p",[t._v("所以以下几个动作可能会导致性能问题：")]),t._v(" "),a("ul",[a("li",[t._v("改变 window 大小")]),t._v(" "),a("li",[t._v("改变字体")]),t._v(" "),a("li",[t._v("添加或删除样式")]),t._v(" "),a("li",[t._v("文字改变")]),t._v(" "),a("li",[t._v("定位或者浮动")]),t._v(" "),a("li",[t._v("盒模型")])]),t._v(" "),a("p",[t._v("很多人不知道的是，重绘和回流其实和 Event loop 有关。")]),t._v(" "),a("ol",[a("li",[t._v("当 Event loop 执行完 Microtasks 后，会判断 document 是否需要更新。因为浏览器是 60Hz 的刷新率，每 16ms 才会更新一次。")]),t._v(" "),a("li",[t._v("然后判断是否有 resize 或者 scroll ，有的话会去触发事件，所以 resize 和 scroll 事件也是至少 16ms 才会触发一次，并且自带节流功能。")]),t._v(" "),a("li",[t._v("判断是否触发了 media query")]),t._v(" "),a("li",[t._v("更新动画并且发送事件")]),t._v(" "),a("li",[t._v("判断是否有全屏操作事件")]),t._v(" "),a("li",[t._v("执行 requestAnimationFrame 回调")]),t._v(" "),a("li",[t._v("执行 IntersectionObserver 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好")]),t._v(" "),a("li",[t._v("更新界面")]),t._v(" "),a("li",[t._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 requestIdleCallback 回调。")])]),t._v(" "),a("h2",{attrs:{id:"_5-减少重绘和回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-减少重绘和回流","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 减少重绘和回流")]),t._v(" "),a("ol",[a("li",[t._v("使用 "),a("code",[t._v("translate")]),t._v(" 替代 "),a("code",[t._v("top")])])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引起回流")]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("使用 "),a("code",[t._v("visibility")]),t._v(" 替换"),a("code",[t._v("display: none")]),t._v(" ，因为前者只会引起重绘，后者会引发回流（改变了布局）")])]),t._v(" "),a("li",[a("p",[t._v("把 DOM 离线后修改，比如：先把 DOM 给 "),a("code",[t._v("display:none")]),t._v(" (有一次 Reflow)，然后你修改 100 次，然后再把它显示出来")])]),t._v(" "),a("li",[a("p",[t._v("不要把 DOM 结点的属性值放在一个循环里当成循环里的变量")])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 offsetTop 会导致回流，因为需要去获取正确的值")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('".test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局")])]),t._v(" "),a("li",[a("p",[t._v("动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 "),a("code",[t._v("requestAnimationFrame")])])]),t._v(" "),a("li",[a("p",[t._v("CSS 选择符从右往左匹配查找，避免 DOM 深度过深")])]),t._v(" "),a("li",[a("p",[t._v("将频繁运行的动画变为图层，图层能够阻止该节点回流影响别的元素。比如对于 "),a("code",[t._v("video")]),t._v(" 标签，浏览器会自动将该节点变为图层。")])])]),t._v(" "),a("h2",{attrs:{id:"_6-事件触发三阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-事件触发三阶段","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 事件触发三阶段")]),t._v(" "),a("p",[t._v("事件触发有三个阶段")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("window")]),t._v(" 往事件触发处传播，遇到注册的捕获事件会触发")]),t._v(" "),a("li",[t._v("传播到事件触发处时触发注册的事件")]),t._v(" "),a("li",[t._v("从事件触发处往 "),a("code",[t._v("window")]),t._v(" 传播，遇到注册的冒泡事件会触发")])]),t._v(" "),a("p",[t._v("事件触发一般来说会按照上面的顺序进行，但是也有特例，如果给一个目标节点同时注册冒泡和捕获事件，事件触发会按照注册的顺序执行。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以下会先打印冒泡然后是捕获")]),t._v("\nnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"冒泡"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"捕获 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"_7-注册事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-注册事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 注册事件")]),t._v(" "),a("p",[t._v("通常我们使用 "),a("code",[t._v("addEventListener")]),t._v(" 注册事件，该函数的第三个参数可以是布尔值，也可以是对象。对于布尔值 "),a("code",[t._v("useCapture")]),t._v(" 参数来说，该参数默认值为 "),a("code",[t._v("false")]),t._v(" "),a("code",[t._v("。useCapture")]),t._v(" 决定了注册的事件是捕获事件还是冒泡事件。对于对象参数来说，可以使用以下几个属性")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("capture")]),t._v("，布尔值，和 "),a("code",[t._v("useCapture")]),t._v(" 作用一样")]),t._v(" "),a("li",[a("code",[t._v("once")]),t._v("，布尔值，值为 "),a("code",[t._v("true")]),t._v(" 表示该回调只会调用一次，调用后会移除监听")]),t._v(" "),a("li",[a("code",[t._v("passive")]),t._v("，布尔值，表示永远不会调用 "),a("code",[t._v("preventDefault")])])]),t._v(" "),a("p",[t._v("一般来说，我们只希望事件只触发在目标上，这时候可以使用 "),a("code",[t._v("stopPropagation")]),t._v(" 来阻止事件的进一步传播。通常我们认为 "),a("code",[t._v("stopPropagation")]),t._v(" 是用来阻止事件冒泡的，其实该函数也可以阻止捕获事件。"),a("code",[t._v("stopImmediatePropagation")]),t._v(" 同样也能实现阻止事件，但是还能阻止该事件目标执行别的注册事件。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopImmediatePropagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"冒泡"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 点击 node 只会执行上面的函数，该函数不会执行")]),t._v("\nnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"捕获 "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("h2",{attrs:{id:"_8-事件代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-事件代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. 事件代理")]),t._v(" "),a("p",[t._v("事件委托还有一个名字叫事件代理，JS 高程上讲："),a("strong",[t._v("事件委托就是利用事件冒泡，只制定一个时间处理程序，就可以管理某一类型的所有事件")]),t._v("。我用取快递来解释这个现象： 有三个同事预计会在周一收到快递。为签收快递，有两种办法：一是三个人在公司门口等快递；二是委托给前台代为签收。现实当中，我们大都采用委托的方案。前台收到快递后，她会判断收件人是谁，然后按照收件人的要求签收，甚至代为付款。这种方案还有一个优势，那就是即使公司里来了新员工（不管多少），前台也会在收到寄给新员工的快递后核实并代为签收。")]),t._v(" "),a("p",[t._v("如果一个节点中的子节点是动态生成的，那么子节点需要注册事件的话应该注册在父节点上")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ul"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ul "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"##ul"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ul"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"click"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[t._v("事件代理的方式相对于直接给目标注册事件来说，有以下优点")]),t._v(" "),a("ul",[a("li",[t._v("节省内存")]),t._v(" "),a("li",[t._v("不需要给子节点注销事件")])]),t._v(" "),a("h2",{attrs:{id:"_9-预加载、预渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-预加载、预渲染","aria-hidden":"true"}},[t._v("#")]),t._v(" 9. 预加载、预渲染")]),t._v(" "),a("h3",{attrs:{id:"预加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 预加载")]),t._v(" "),a("p",[t._v("在开发中，可能会遇到这样的情况。有些资源不需要马上用到，但是希望尽早获取，这时候就可以使用预加载。")]),t._v(" "),a("p",[t._v("预加载其实是声明式的 "),a("code",[t._v("fetch")]),t._v(" ，强制浏览器请求资源，并且不会阻塞 "),a("code",[t._v("onload")]),t._v(" 事件，可以使用以下代码开启预加载")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("预加载可以一定程度上降低首屏的加载时间，因为可以将一些不影响首屏但重要的文件延后加载，唯一缺点就是兼容性不好。")]),t._v(" "),a("h3",{attrs:{id:"预渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预渲染","aria-hidden":"true"}},[t._v("#")]),t._v(" 预渲染")]),t._v(" "),a("p",[t._v("可以通过预渲染将下载的文件预先在后台渲染，可以使用以下代码开启预渲染")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("prerender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://example.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("预渲染虽然可以提高页面的加载速度，但是要确保该页面百分百会被用户在之后打开，否则就白白浪费资源去渲染")]),t._v(" "),a("h2",{attrs:{id:"_10-如何刷新浏览器的应用缓存？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-如何刷新浏览器的应用缓存？","aria-hidden":"true"}},[t._v("#")]),t._v(" 10. 如何刷新浏览器的应用缓存？")]),t._v(" "),a("p",[t._v("浏览器缓存可分为强缓存和协商缓存。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("强缓存")]),t._v("指的是设置了 expires 或者 cache-control:max-age 的请求，此类缓存在设定的过期时间之前刷新不会再次向浏览器发起请求，直接由客户端决定使用缓存进行页面展示。")]),t._v(" "),a("li",[a("strong",[t._v("协商缓存")]),t._v("指的是未设置强缓存对应字段的缓存，浏览器会向服务器发送请求，并带 IF-Modified-Since 和 IF-None-Match 字段，服务器对应的返回字段为 Last-Modified 或 Etag，如果在 etag 未更改 或 last-modified 的时间早于 IF-Modified-Since 则服务器不返回文件，使用浏览器本地缓存。")])]),t._v(" "),a("p",[t._v("回到问题，如何刷新应用缓存。"),a("br"),t._v("\n当你直接点击浏览器的刷新按钮或者 F5 刷新时，浏览器会忽略强缓存，必定向服务器发起请求，但是如果服务器返回 304 则会继续使用本地缓存。"),a("br"),t._v("\n当点击 Ctrl+F5 浏览器会忽略一切缓存（cache-control:no-cache），向服务器发起请求，并且一定会使用服务器的返回来渲染页面。")]),t._v(" "),a("h2",{attrs:{id:"_11-cdn-缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-cdn-缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 11. CDN 缓存")]),t._v(" "),a("h3",{attrs:{id:"cdn-缓存介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-缓存介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" CDN 缓存介绍")]),t._v(" "),a("p",[t._v("当服务接入了 CDN 之后，浏览器本地缓存的资源过期之后，浏览器不是直接向源服务器请求资源，而是转而向 CDN 边缘节点请求资源。CDN 边缘节点中将用户的数据缓存起来，如果 CDN 中的缓存也过期了，CDN 边缘节点会向源服务器发出回源请求，从而来获取最新资源。")]),t._v(" "),a("h3",{attrs:{id:"cdn-缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-缓存策略","aria-hidden":"true"}},[t._v("#")]),t._v(" CDN 缓存策略")]),t._v(" "),a("p",[t._v("CDN 节点缓存策略一般都会遵循 HTTP 标准协议，又拍云在没有匹配到自定义缓存规则且源服务器也没有返回任何有效缓存头的情况下，默认配置策略如下：")]),t._v(" "),a("ol",[a("li",[t._v("针对静态资源，所有正常状态码（大于等于 200 小于 400）均缓存 8 天。特别地，301 响应缓存 2 小时，302 响应缓存 20 分钟；")]),t._v(" "),a("li",[t._v("针对动态资源，程序会自动识别，则不进行缓存；")]),t._v(" "),a("li",[t._v("对于其他大于等于 400 的不正常响应，则不进行缓存；")])]),t._v(" "),a("h3",{attrs:{id:"cdn-缓存的不足"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-缓存的不足","aria-hidden":"true"}},[t._v("#")]),t._v(" CDN 缓存的不足")]),t._v(" "),a("p",[t._v("CDN 缓存不仅减少了用户的访问延时，相应的也减少了源服务器的负载，但这里需要注意，当源服务器资源更新后，如果 CDN 节点上缓存数据还未过期，用户访问到的依旧是过期的缓存资源，这会导致用户最终访问出现偏差。因此，开发者需要手动刷新相关资源，使 CDN 缓存保持为最新的状态。")]),t._v(" "),a("h2",{attrs:{id:"_12-http2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-http2","aria-hidden":"true"}},[t._v("#")]),t._v(" 12. HTTP2")]),t._v(" "),a("ol",[a("li",[t._v("强制 https")]),t._v(" "),a("li",[t._v("性能更高 - 面向流、头压缩、 多路复用")]),t._v(" "),a("li",[t._v("双向通信 - 服务器推送")])]),t._v(" "),a("h2",{attrs:{id:"_13-简单讲解一下-http2-的多路复用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-简单讲解一下-http2-的多路复用","aria-hidden":"true"}},[t._v("#")]),t._v(" 13. 简单讲解一下 http2 的多路复用")]),t._v(" "),a("p",[t._v("HTTP2 采用二进制格式传输，取代了 HTTP1.x 的文本格式，二进制格式解析更高效。\n多路复用代替了 HTTP1.x 的序列和阻塞机制，所有的相同域名请求都通过同一个 TCP 连接并发完成。在 HTTP1.x 中，并发多个请求需要多个 TCP 连接，浏览器为了控制资源会有 6-8 个 TCP 连接都限制。")]),t._v(" "),a("p",[t._v("HTTP2 中")]),t._v(" "),a("ul",[a("li",[t._v("同域名下所有通信都在单个连接上完成，消除了因多个 TCP 连接而带来的延时和内存消耗。")]),t._v(" "),a("li",[t._v("单个连接上可以并行交错的请求和响应，之间互不干扰")])]),t._v(" "),a("p",[t._v("在 HTTP/1 中，每次请求都会建立一次 HTTP 连接，也就是我们常说的 3 次握手 4 次挥手，这个过程在一次请求过程中占用了相当长的时间，即使开启了 "),a("code",[t._v("Keep-Alive")]),t._v(" ，解决了多次连接的问题，但是依然有两个效率上的问题：")]),t._v(" "),a("ul",[a("li",[t._v("第一个：串行的文件传输。当请求 a 文件时，b 文件只能等待，等待 a 连接到服务器、服务器处理文件、服务器返回文件，这三个步骤。我们假设这三步用时都是 1 秒，那么 a 文件用时为 3 秒，b 文件传输完成用时为 6 秒，依此类推。（注：此项计算有一个前提条件，就是浏览器和服务器是单通道传输）")]),t._v(" "),a("li",[t._v("第二个：连接数过多。我们假设 Apache 设置了最大并发数为 300，因为浏览器限制，浏览器发起的最大请求数为 6，也就是服务器能承载的最高并发为 50，当第 51 个人访问时，就需要等待前面某个请求处理完成。")])]),t._v(" "),a("p",[t._v("HTTP/2 的多路复用就是为了解决上述的两个性能问题。"),a("br"),t._v("\n在 HTTP/2 中，有两个非常重要的概念，分别是帧（frame）和流（stream）。"),a("br"),t._v("\n帧代表着最小的数据单位，每个帧会标识出该帧属于哪个流，流也就是多个帧组成的数据流。"),a("br"),t._v("\n多路复用，就是在一个 TCP 连接中可以存在多条流。换句话说，也就是可以发送多个请求，对端可以通过帧中的标识知道属于哪个请求。通过这个技术，可以避免 HTTP 旧版本中的队头阻塞问题，极大的提高传输性能。")]),t._v(" "),a("p",[t._v("简单来说， 就是在同一个 TCP 连接，同一时刻可以传输多个 HTTP 请求"),a("br"),t._v("\n之前是同一个连接只能用一次， 如果开启了"),a("code",[t._v("keep-alive")]),t._v("，虽然可以用多次，但是同一时刻只能有一个 HTTP 请求")]),t._v(" "),a("h2",{attrs:{id:"_14-http-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-http-状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" 14. HTTP 状态码")]),t._v(" "),a("ul",[a("li",[t._v("1xx 初始化（http2.0 已经么有 1xx 了{websocket 例外}")]),t._v(" "),a("li",[t._v("2xx 客户端成功（200：成功；202：接受）")]),t._v(" "),a("li",[t._v("3xx 重定向缓存（301：永久重定向；302 临时转移； （303：永久重定向；）307：临时重定向；304：缓存）")]),t._v(" "),a("li",[t._v("4xx 客户端失败（400：参数错误；401：未认证登陆，无权限访问；403：禁止访问；404：未找到；417：发送资源过大）")]),t._v(" "),a("li",[t._v("5xx 服务器端失败（500：服务器内部错误；503：连接数过多，服务器超负载，504：网关超时）")])]),t._v(" "),a("h2",{attrs:{id:"_15-tcp-三次握手和四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-tcp-三次握手和四次挥手","aria-hidden":"true"}},[t._v("#")]),t._v(" 15. TCP 三次握手和四次挥手")]),t._v(" "),a("ol",[a("li",[t._v("客户端发送 syn 包到服务器，等待服务器确认接收。")]),t._v(" "),a("li",[t._v("服务器确认接收 syn 包并确认客户的 syn，并发送回来一个 syn+ack 的包给客户端。")]),t._v(" "),a("li",[t._v("客户端确认接收服务器的 syn+ack 包，并向服务器发送确认包 ack，二者相互建立联系后，完成 tcp 三次握手。")]),t._v(" "),a("li",[t._v("四次握手就是中间多了一层 等待服务器再一次响应回复相关数据的过程")])]),t._v(" "),a("h2",{attrs:{id:"_16-跨域时如何处理-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-跨域时如何处理-cookie","aria-hidden":"true"}},[t._v("#")]),t._v(" 16. 跨域时如何处理 cookie")]),t._v(" "),a("p",[t._v("服务端可以根据实际需求修改下面设置，以 Java 代码为做示例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//允许跨域的域名，*号为允许所有,存在被 DDoS攻击的可能。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表明服务器支持的所有头信息字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Origin, No-Cache, X-Requested-With, If-Modified-Since, Pragma,Last-Modified, Cache-Control, Expires, Content-Type, X-E4M-With,userId,token"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 目前测试来看为了兼容所有请求方式，上面2个必须设 **/")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果需要把Cookie发到服务端，需要指定Access-Control-Allow-Credentials字段为true;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Credentials"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首部字段 Access-Control-Allow-Methods 表明服务器允许客户端使用 POST, GET 和 OPTIONS 方法发起请求。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//该字段与 HTTP/1.1 Allow: response header 类似，但仅限于在需要访问控制的场景中使用。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Methods"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST, GET, OPTIONS, DELETE"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表明该响应的有效时间为 86400 秒，也就是 24 小时。在有效时间内，浏览器无须为同一请求再次发起预检请求。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//请注意，浏览器自身维护了一个最大有效时间，如果该首部字段的值超过了最大有效时间，将不会生效。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Max-Age"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"86400"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE8 引入XDomainRequest跨站数据获取功能,也就是说为了兼容IE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XDomainRequestAllowed"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br")])]),a("p",[a("strong",[t._v("跨域请求携带 Cookie")])]),t._v(" "),a("p",[t._v("服务端可以根据实际需求修改下面设置，以 Java 代码为做示例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果需要把Cookie发到服务端，需要指定Access-Control-Allow-Credentials字段为true;")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Credentials"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//允许跨域的域名，*号为允许所有,存在被 DDoS攻击的可能。")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Origin"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//表明服务器支持的头信息字段")]),t._v("\nresponse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content-type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("前端根据实际情况修改发起请求的 ajax，示例：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ajax")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"实际的请求地址"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("参数：参数值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dataType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    crossDomain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置跨域为true")]),t._v("\n    xhrFields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      withCredentials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//默认情况下，标准的跨域请求是不会发送cookie的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("success")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"请求成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("strong",[t._v("Add")]),t._v("\n如果要实现 cookie 的共享，也有两种方案")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("前端的请求用 jsonp 的形式")])]),t._v(" "),a("li",[a("p",[t._v("前端加上配置：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("xhrFields"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   withCredentials"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("服务端加上配置："),a("code",[t._v("header('Access-Control-Allow-Credentials: true')")]),t._v(";")])]),t._v(" "),a("li",[a("p",[t._v("设置 Nginx 代理服务器，将两个服务器域名统一到一个反向代理服务器。")])])]),t._v(" "),a("h2",{attrs:{id:"_17-垃圾回收机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-垃圾回收机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 17. 垃圾回收机制")]),t._v(" "),a("p",[t._v("js 的 垃圾回收机制，常用的有两种方法：标记清除，引用计数；")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("标记清除")]),t._v("：当变量进入环境时标记为“进入环境”，当变量离开环境时标记为“离开环境”；然后垃圾收集器会定时去清除，销毁被标记为离开环境的变量，释放其内存；")]),t._v(" "),a("li",[a("strong",[t._v("引用计数")]),t._v("：跟踪记录每一个引用的值被引用的次数。即变量每被引用一次，引用计数加 1，相反当包含这个值的 引用变量又取得了另外一个值（另外一个值赋给了引用这个值的变量），引用计数减 1；当引用计数变为 0 时，则说明没有值引用这个值了，此时（你已经猜到了）这个变量就可以被垃圾回收机制回收了，（因为没有在被引用了）；一个对象不被其他对象引用时会被回收")])]),t._v(" "),a("h2",{attrs:{id:"_18-开发过程中遇到的内存泄露情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-开发过程中遇到的内存泄露情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 18. 开发过程中遇到的内存泄露情况")]),t._v(" "),a("h3",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("p",[t._v("内存泄露是指一块被分配的内存既不能使用，又不能回收，直到浏览器进程结束。C#和 Java 等语言采用了自动垃圾回收方法管理内存，几乎不会发生内存泄露。我们知道，浏览器中也是采用自动垃圾回收方法管理内存，但由于浏览器垃圾回收方法有 bug，会产生内存泄露。")]),t._v(" "),a("p",[t._v("由于每次的垃圾回收开销都相对较大，并且由于机制的一些不完善的地方，可能会导致内存泄露。我们可以利用一些方法减少垃圾回收，并且尽量避免循环引用的问题。")]),t._v(" "),a("p",[t._v("例如，在对象结束使用后 ，令 obj = null。这样利于解除循环引用，使得无用变量及时被回收。")]),t._v(" "),a("p",[t._v("再如，js 中开辟空间的操作有 "),a("code",[t._v("new()")]),t._v(", "),a("code",[t._v("[ ]")]),t._v(", "),a("code",[t._v("{ }")]),t._v(", "),a("code",[t._v("function (){..}")]),t._v("。在创建新对象的时候要尽量考虑增大对象的复用性。")]),t._v(" "),a("h3",{attrs:{id:"内存泄露的几种情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露的几种情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 内存泄露的几种情况:")]),t._v(" "),a("ol",[a("li",[t._v("意外的全局变量引起的内存泄漏"),a("br"),t._v("\n原因：全局变量，不会被回收。"),a("br"),t._v("\n解决：使用严格模式避免。")]),t._v(" "),a("li",[t._v("闭包引起的内存泄漏"),a("br"),t._v("\n原因：闭包可以维持函数内局部变量，使其得不到释放。"),a("br"),t._v("\n解决：将事件处理函数定义在外部，解除闭包,或者在定义事件处理函数的外部函数中，删除对 dom 的引用。")]),t._v(" "),a("li",[t._v("没有清理的 DOM 元素引用"),a("br"),t._v("\n原因：虽然别的地方删除了，但是对象中还存在对 dom 的引用"),a("br"),t._v("\n解决：手动删除。")]),t._v(" "),a("li",[t._v("被遗忘的定时器或者回调"),a("br"),t._v("\n原因：定时器中有 dom 的引用，即使 dom 删除了，但是定时器还在，所以内存中还是有这个 dom。"),a("br"),t._v("\n解决：手动删除定时器和 dom。")]),t._v(" "),a("li",[t._v("子元素存在引用引起的内存泄漏"),a("br"),t._v("\n原因：div 中的 ul li 得到这个 div，会间接引用某个得到的 li，那么此时因为 div 间接引用 li，即使 li 被清空，也还是在内存中，并且只要 li 不被删除，他的父元素都不会被删除。"),a("br"),t._v("\n解决：手动删除清空")])]),t._v(" "),a("h2",{attrs:{id:"_19-js-事件轮询、微任务和宏任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19-js-事件轮询、微任务和宏任务","aria-hidden":"true"}},[t._v("#")]),t._v(" 19. js 事件轮询、微任务和宏任务")]),t._v(" "),a("p",[t._v("JavaScript 是单线程语言，也就是说同一个事件只能做一件事。JaVaScript 的单线程，与它的用途有关，作为浏览器脚本语言，JavaScript 的主要用途是与用户交互，以及操作 DOM。这决定了它只能是单线程，否则会带来很多复杂的同步问题。为了利用多核 CPU 的计算能力，虽然 HTML5 提出了 Web Worker，允许 JavaScript 脚本创建多个线程，但是子线程完全受主线程控制，且不得操作 DOM 和 BOM。所以，依然没有改变 JavaScript 是单线程的本质。")]),t._v(" "),a("p",[t._v("为了解决单线程导致的线程等待资源，cpu 空闲，而其他任务一直等待的问题。将所有的任务分为两种，"),a("code",[t._v("一种是同步任务")]),t._v("，"),a("code",[t._v("一种是异步任务")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行下一个任务。")])]),t._v(" "),a("li",[a("strong",[t._v("异步任务指的是，不进入主线程，而进入“任务队列”的任务，自由“任务队列”通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。")])])]),t._v(" "),a("p",[t._v("主任务和任务队列示意图：")]),t._v(" "),a("div",{attrs:{align:"center"}},[a("img",{attrs:{src:t.$withBase("/images/js/base/01041.png"),alt:"images/js/base/01041.png"}})]),t._v(" "),a("p",[a("strong",[t._v("执行过程：")])]),t._v(" "),a("ol",[a("li",[t._v("所有的同步任务都在主线程上指向，形成一个执行栈")]),t._v(" "),a("li",[t._v("主线程之外，还存在一个“任务队列”。只要异步任务有了运行结果，就在“任务队列”之中放置一个事件。")]),t._v(" "),a("li",[t._v("一旦“执行栈”中的所有同步任务执行完毕，系统就会读取“任务队列”，将可执行的任务放在主线程执行。任务队列是一个先进先出的数据结构，排在前面的事件，优先被主线程读取。")]),t._v(" "),a("li",[t._v("主线程不短重复上面的第三步。")])]),t._v(" "),a("p",[t._v("只要主线程空了，就会去读取“任务队列”。"),a("br"),t._v("\nEvent Loop（事件轮询）"),a("br"),t._v("\n主线程从“任务队列”中读取事件，这个过程是循环不断的，所以整个过程的这种运行机制又称为 Event Loop（事件循环）")]),t._v(" "),a("ul",[a("li",[t._v("执行机制：\n"),a("ol",[a("li",[t._v("执行一个宏任务（栈中没有就从事件队列中获取）")]),t._v(" "),a("li",[t._v("执行过程中如果遇到微任务，就将它添加到微任务的任务队列中")]),t._v(" "),a("li",[t._v("宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）")]),t._v(" "),a("li",[t._v("当前宏任务执行完毕，开始检查渲染，然后 GUI 线程接管渲染")]),t._v(" "),a("li",[t._v("渲染完毕后，JS 引擎线程继续，开始下一个宏任务（从宏任务队列中获取）")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JavaScript 是单线程语言，决定于它的设计最初是用来处理浏览器网页的交互。浏览器负责解释和执行 JavaScript 的线程只有一个（所有说是单线程），即 JS 引擎线程，但是浏览器同样提供其他线程，如：事件触发线程、定时器触发线程等。")])]),t._v(" "),a("li",[a("p",[t._v("异步一般是指：")]),t._v(" "),a("ul",[a("li",[t._v("网络请求")]),t._v(" "),a("li",[t._v("计时器")]),t._v(" "),a("li",[t._v("DOM 事件监听")])])]),t._v(" "),a("li",[a("p",[t._v("事件循环机制：")]),t._v(" "),a("ul",[a("li",[t._v("JS 引擎线程会维护一个执行栈，同步代码会依次加入到执行栈中依次执行并出栈。")]),t._v(" "),a("li",[t._v("JS 引擎线程遇到异步函数，会将异步函数交给相应的 Webapi，而继续执行后面的任务。")]),t._v(" "),a("li",[t._v("Webapi 会在条件满足的时候，将异步对应的回调加入到消息队列中，等待执行。")]),t._v(" "),a("li",[t._v("执行栈为空时，JS 引擎线程会去取消息队列中的回调函数（如果有的话），并加入到执行栈中执行。")]),t._v(" "),a("li",[t._v("完成后出栈，执行栈再次为空，重复上面的操作，这就是事件循环(event loop)机制。")])])])]),t._v(" "),a("h2",{attrs:{id:"_20-微信网页版登录机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20-微信网页版登录机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 20. 微信网页版登录机制")]),t._v(" "),a("p",[t._v("用 google 浏览器打开网页版微信：https://wx.qq.com/，F12打开开发者工具，选择Network，F5刷新页面，可以看到此网页一直有一个请求处于等待相应状态")]),t._v(" "),a("p",[t._v("请求参数如下：")]),t._v(" "),a("p",[t._v("https://login.wx.qq.com/cgi-bin/mmwebwx-bin/login?loginicon=true&"),a("span",{staticStyle:{color:"red"}},[t._v("uuid=gcWrz8np0Q==")]),t._v("&tip=0&r=-1942477294&_=1513770915130")]),t._v(" "),a("p",[t._v("该请求会一直处于等待相应状态，除非等到 25s 左右自动重新请求，或二维码被扫描，二维码被扫描的情况下，页面会加载出用户头像，并等待用户在手机上进行确认登录，确认后就能加载出微信主界面")]),t._v(" "),a("p",[t._v("1、  打开网页版微信，会向微信服务器发送请求得到一个 uuid，用户生成登录二维码")]),t._v(" "),a("p",[t._v("2、  页面用此 uuid 作为参数发送请求，查看该 uuid 被扫描的情况，如果已经被扫描，则返回扫描者的信息，如果没有被扫描，等待一段时间后，继续查看，直到请求超时或找到扫描者信息")]),t._v(" "),a("p",[t._v("3、  用户用手机扫描二维码时，就是向服务器发送请求，用扫描到的二维码 uuid 作为 key，生成扫描记录和授权记录，方便网页版使用该 uuid 查找扫描记录")]),t._v(" "),a("p",[t._v("问题总结\n实现的关键在于一个一直处于等待回应状态的请求(长轮询)，该请求保证只要二维码被扫描，就能实时的获取到用户信息")]),t._v(" "),a("h2",{attrs:{id:"_21-https-的传输过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_21-https-的传输过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 21. https 的传输过程")]),t._v(" "),a("ol",[a("li",[t._v("在服务器端存在一个公钥及私钥")]),t._v(" "),a("li",[t._v("客户端从服务器取得这个公钥")]),t._v(" "),a("li",[t._v("客户端产生一个随机的密钥")]),t._v(" "),a("li",[t._v("客户端通过公钥对密钥加密（非对称加密）")]),t._v(" "),a("li",[t._v("客户端发送到服务器端")]),t._v(" "),a("li",[t._v("服务器端接受这个密钥并且以后的服务器端和客户端的数据全部通过这个密钥加密")])]),t._v(" "),a("h2",{attrs:{id:"_22-tcp-和-udp-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_22-tcp-和-udp-区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 22. tcp 和 udp 区别")]),t._v(" "),a("ol",[a("li",[t._v("tcp 只能一对一通信，udp 可以一对一、一对多、多对多通信，即支持多播和广播")]),t._v(" "),a("li",[t._v("tcp 首部开销消耗 32 字节，udp 仅消耗 8 个字节")]),t._v(" "),a("li",[t._v("tcp 适合对数据安全性要求高的场景，比如文件传输，udp 适合对数据实时性要求高的场景，比如视频通话、语音通话")]),t._v(" "),a("li",[t._v("tcp 是有状态连接，udp 是无状态的连接")]),t._v(" "),a("li",[t._v("tcp-可靠传输 udp-不可靠传输")]),t._v(" "),a("li",[t._v("tcp-面向字节流 udp-面向报文")])]),t._v(" "),a("h2",{attrs:{id:"_23-tcp-怎么保证可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23-tcp-怎么保证可靠性","aria-hidden":"true"}},[t._v("#")]),t._v(" 23. tcp 怎么保证可靠性")]),t._v(" "),a("ol",[a("li",[t._v("超时重传机制")]),t._v(" "),a("li",[t._v("对失序数据进行重排序")]),t._v(" "),a("li",[t._v("应答机制")]),t._v(" "),a("li",[t._v("滑动窗口")]),t._v(" "),a("li",[t._v("拥塞控制")])]),t._v(" "),a("h2",{attrs:{id:"_24-浏览器的机制你了解多少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_24-浏览器的机制你了解多少","aria-hidden":"true"}},[t._v("#")]),t._v(" 24. 浏览器的机制你了解多少")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("解析 HTML")]),a("br"),t._v("\n在这一步浏览器执行了所有的加载解析逻辑，在解析 HTML 的过程中发出了页面渲染所需的各种外部资源请求。")]),t._v(" "),a("li",[a("strong",[t._v("计算样式")]),a("br"),t._v("\n浏览器将识别并加载所有的 CSS 样式信息与 DOM 树合并，最终生成页面 render 树（:after :before 这样的伪元素会在这个环节被构建到 DOM 树中）。")]),t._v(" "),a("li",[a("strong",[t._v("计算图层布局")]),a("br"),t._v("\n页面中所有元素的相对位置信息，大小等信息均在这一步得到计算。")]),t._v(" "),a("li",[a("strong",[t._v("绘制图层")]),a("br"),t._v("\n在这一步中浏览器会根据我们的 DOM 代码结果，把每一个页面图层转换为像素，并对所有的媒体文件进行解码。")]),t._v(" "),a("li",[a("strong",[t._v("整合图层，得到页面")]),a("br"),t._v("\n最后一步浏览器会合并合各个图层，将数据由 CPU 输出给 GPU 最终绘制在屏幕上。（复杂的视图层会给这个阶段的 GPU 计算带来一些压力，在实际应用中为了优化动画性能，我们有时会手动区分不同的图层）。")])]),t._v(" "),a("h2",{attrs:{id:"_25-unicode-utf8-utf16-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_25-unicode-utf8-utf16-有什么区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 25. unicode utf8 utf16 有什么区别")]),t._v(" "),a("ul",[a("li",[t._v("Unicode 是一个巨大的字符集，给世界上所有的字符定义了一个唯一编码。其仅仅规定了每个符号的二进制代码，没有制定细化的存储规则。UTF-8、UTF-16、UTF-32 才是 Unicode 的存储格式定义。")]),t._v(" "),a("li",[t._v("Unicode 是「字符集」")]),t._v(" "),a("li",[t._v("UTF-8 是「编码规则」")])]),t._v(" "),a("h2",{attrs:{id:"_26-缓存以键值形式存在浏览器，键是什么，值是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_26-缓存以键值形式存在浏览器，键是什么，值是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 26. 缓存以键值形式存在浏览器，键是什么，值是什么")]),t._v(" "),a("p",[t._v("键值对存储通常都有如下接口：")]),t._v(" "),a("p",[t._v("Get( key ): 获取之前存储于某标示符“key”之下的一些数据，或者“key”下没有数据时报错。")]),t._v(" "),a("p",[t._v("Set( key, value ): 将“value”存储到存储空间中某标示符“key”下，使得我们可以通过调用相同的“key”来访问它。如果“key”下已经有了一些数据，旧的数据将被替换。")]),t._v(" "),a("p",[t._v("Delete( key ): 删除存储在“key”下的数据。")]),t._v(" "),a("p",[t._v("大部分低层实现都是使用哈希表或者某种自平衡树（例如 B-树或者红黑树）。有时候数据太大而不装不进内存，或者必须维持数据谨防系统因为未知原因而崩溃。在这些情况下，就必须使用到文件系统。")]),t._v(" "),a("h2",{attrs:{id:"_27-讲解一下-https-对称加密和非对称加密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_27-讲解一下-https-对称加密和非对称加密","aria-hidden":"true"}},[t._v("#")]),t._v(" 27. 讲解一下 https 对称加密和非对称加密")]),t._v(" "),a("p",[a("strong",[t._v("对称加密")]),t._v("："),a("br"),t._v("\n发送方和接收方需要持有同一把密钥，发送消息和接收消息均使用该密钥。相对于非对称加密，对称加密具有更高的加解密速度，但双方都需要事先知道密钥，密钥在传输过程中可能会被窃取，因此安全性没有非对称加密高。")]),t._v(" "),a("p",[a("strong",[t._v("非对称加密")]),t._v("："),a("br"),t._v("\n接收方在发送消息前需要事先生成公钥和私钥，然后将公钥发送给发送方。发送方收到公钥后，将待发送数据用公钥加密，发送给接收方。接收到收到数据后，用私钥解密。"),a("br"),t._v("\n在这个过程中，公钥负责加密，私钥负责解密，数据在传输过程中即使被截获，攻击者由于没有私钥，因此也无法破解。"),a("br"),t._v("\n非对称加密算法的加解密速度低于对称加密算法，但是安全性更高。")]),t._v(" "),a("p",[t._v("几个名词要理清")]),t._v(" "),a("ul",[a("li",[t._v("RSA：非对称加密")]),t._v(" "),a("li",[t._v("AES：对称加密 生成一个随机字符串 key 只有客户端和服务端有 他们两个通过这个 key 对数据加密和传输跟解密 这一个统称对称加密")]),t._v(" "),a("li",[t._v("CA：权威认证机构 服务器在建站的时候 去 CA 认证机构认证 得到对应的数字签名 相当于身份证号 客户端每次安装浏览器的时候 都会下载最新的 CA 列表 这个列表有对应的数字签名和服务器 IP 一一对应的列表 这就是为什么我们自己搭建的 localhost 没法发 https 的原因 因为没法进行 CA 认证")]),t._v(" "),a("li",[t._v("数字证书：包含了数字签名跟 RSA 公钥")]),t._v(" "),a("li",[t._v("数字签名：保证数字证书一定是服务器传给客户端的 相当于服务器的身份证 ID")]),t._v(" "),a("li",[t._v("对称密钥： 对数据进行加密的 key")]),t._v(" "),a("li",[t._v("非对称密钥： （k1， k2） k1 加密的数据 只有 k2 能解开 k1 位非对称公钥 k2 为非对称私钥")]),t._v(" "),a("li",[t._v("非对称公钥：RSA 公钥 k1 加密的数据 只有 k2 能解开")]),t._v(" "),a("li",[t._v("非对称私钥：RSA 私钥 k1 加密的数据 只有 k2 能解开")])]),t._v(" "),a("h2",{attrs:{id:"_28-如何优化网页上需要展示的超大图片，从请求和性能来解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_28-如何优化网页上需要展示的超大图片，从请求和性能来解释","aria-hidden":"true"}},[t._v("#")]),t._v(" 28. 如何优化网页上需要展示的超大图片，从请求和性能来解释")]),t._v(" "),a("ol",[a("li",[t._v("图片格式的选择")]),t._v(" "),a("li",[t._v("图片压缩")]),t._v(" "),a("li",[t._v("图片懒加载")])]),t._v(" "),a("h2",{attrs:{id:"_29-实现-adblock-的策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_29-实现-adblock-的策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 29. 实现 Adblock 的策略")]),t._v(" "),a("ol",[a("li",[t._v("对 URL 请求的拦截，这种 URL 广告一般是网页中 div 元素嵌入了一个 iframe/image 元素，然后加载一个广告链接或者 GIF 图片。")]),t._v(" "),a("li",[t._v("对于页面 DOM 嵌入广告内容的处理，这种一般是通过 CSS3 Selector 定位到这些 DOM 元素，然后设置其 display 等于 none !important")]),t._v(" "),a("li",[t._v("模拟点击，对于有些可以叉掉的广告，而又没有 cookie，每次访问都会出现，可以写脚本让浏览器帮你进行网页模拟点击，直接帮点击那个叉，但碰到网速不好，特别是移动端很可能出现广告出现一下就消失的效果，用户体验可能不是很好。")])]),t._v(" "),a("h2",{attrs:{id:"_30-dom0、dom2、dom3-事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_30-dom0、dom2、dom3-事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 30. dom0、dom2、dom3 事件")]),t._v(" "),a("h3",{attrs:{id:"_0-级-dom-分为-2-个："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-级-dom-分为-2-个：","aria-hidden":"true"}},[t._v("#")]),t._v(" 0 级 DOM 分为 2 个：")]),t._v(" "),a("ol",[a("li",[t._v("一是在标签内写 "),a("code",[t._v("onclick")]),t._v(" 事件"),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myButton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Press Me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("alert('thanks');"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[t._v("二是在 JS 写 "),a("code",[t._v("onlicke=function(){}")]),t._v("函数"),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myButton"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"thanks"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-级-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-级-dom","aria-hidden":"true"}},[t._v("#")]),t._v(" 2 级 DOM")]),t._v(" "),a("p",[t._v("只有一个：监听方法，原生有两个方法用来添加和移除事件处理程序："),a("code",[t._v("addEventListener()")]),t._v("和"),a("code",[t._v("removeEventListener()")]),t._v("。")]),t._v(" "),a("p",[t._v("它们都有三个参数：")]),t._v(" "),a("ul",[a("li",[t._v("第一个参数是事件名（如 click）；")]),t._v(" "),a("li",[t._v("第二个参数是事件处理程序函数；")]),t._v(" "),a("li",[t._v("第三个参数如果是 true 则表示在捕获阶段调用，为 false 表示在冒泡阶段调用。")])]),t._v(" "),a("p",[a("code",[t._v("addEventListener()")]),t._v(":可以为元素添加多个事件处理程序，触发时会按照添加顺序依次调用。\n"),a("code",[t._v("removeEventListener()")]),t._v(":不能移除匿名添加的函数。")]),t._v(" "),a("p",[t._v("只有 2 级 DOM 包含 3 个事件："),a("code",[t._v("事件捕获阶段")]),t._v("、"),a("code",[t._v("处于目标阶段")]),t._v("和"),a("code",[t._v("事件冒泡阶段")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("点击 a 后 capturing(捕捉)阶段事件传播会从 document -> span -> a，然后发生在 a，最后 bubbling(冒泡)阶段事件传播会从 a -> span -> document 。")]),t._v(" "),a("p",[t._v("区别：")]),t._v(" "),a("ul",[a("li",[t._v("如果定义了两个 dom0 级事件，dom0 级事件会覆盖")]),t._v(" "),a("li",[t._v("dom2 不会覆盖，会依次执行")]),t._v(" "),a("li",[t._v("dom0 和 dom2 可以共存，不互相覆盖，但是 dom0 之间依然会覆盖")])])])}),[],!1,null,null,null);s.default=e.exports}}]);