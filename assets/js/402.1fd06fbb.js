(window.webpackJsonp=window.webpackJsonp||[]).push([[402],{745:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-21-40"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-21-40","aria-hidden":"true"}},[t._v("#")]),t._v(" React 21-40")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#react-21-40"}},[t._v("React 21-40")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#21redux%E5%92%8Cflux%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("21.redux和flux的区别是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#22react-router%E7%9A%84link%E6%A0%87%E7%AD%BE%E5%92%8Ca%E6%A0%87%E7%AD%BE%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("22.React-Router的"),s("code",[t._v("<Link>")]),t._v("标签和"),s("code",[t._v("<a>")]),t._v("标签有什么区别？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#23redux%E4%B8%AD%E5%BC%82%E6%AD%A5action%E5%92%8C%E5%90%8C%E6%AD%A5action%E6%9C%80%E5%A4%A7%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("23.Redux中异步action和同步action最大的区别是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#24redux%E5%92%8Cvuex%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("24.Redux和vuex有什么区别？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#25redux%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%98%AF%E4%BB%80%E4%B9%88%E4%BD%A0%E6%9C%89%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9Bredux%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6"}},[t._v("25.Redux的中间件是什么？你有用过哪些Redux的中间件？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#26%E8%AF%B4%E8%AF%B4redux%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%B5%81%E7%A8%8B"}},[t._v("26.说说Redux的实现流程")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#27mobx%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("27.Mobx的设计思想是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#28redux%E7%94%B1%E5%93%AA%E4%BA%9B%E7%BB%84%E4%BB%B6%E6%9E%84%E6%88%90"}},[t._v("28.Redux由哪些组件构成？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#29mobx%E5%92%8Credux%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("29.Mobx和Redux有什么区别？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#30%E5%9C%A8react%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%A0%E6%98%AF%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9redux%E5%92%8Cmobx%E7%9A%84%E8%AF%B4%E8%AF%B4%E4%BD%A0%E7%9A%84%E7%90%86%E8%A7%A3"}},[t._v("30.在React项目中你是如何选择Redux和Mobx的？说说你的理解")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#31%E4%BD%A0%E6%9C%89%E5%9C%A8react%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%BF%87mobx%E5%90%97%E5%AE%83%E7%9A%84%E8%BF%90%E7%94%A8%E5%9C%BA%E6%99%AF%E6%9C%89%E5%93%AA%E4%BA%9B"}},[t._v("31.你有在React中使用过Mobx吗？它的运用场景有哪些？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#32%E6%80%8E%E6%A0%B7%E5%AE%9E%E7%8E%B0react%E7%BB%84%E4%BB%B6%E7%9A%84%E8%AE%B0%E5%BF%86%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("32.怎样实现react组件的记忆？原理是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#33%E5%88%9B%E5%BB%BAreact%E5%8A%A8%E7%94%BB%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E5%BC%8F"}},[t._v("33.创建react动画有哪些方式？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#34%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BB%BA%E8%AE%AE%E4%B8%8D%E8%A6%81%E8%BF%87%E6%B8%A1%E4%BD%BF%E7%94%A8refs"}},[t._v("34.为什么建议不要过渡使用Refs？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#35%E5%9C%A8react%E4%BD%BF%E7%94%A8hoc%E6%9C%89%E9%81%87%E5%88%B0%E8%BF%87%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3"}},[t._v("35.在react使用HOC有遇到过哪些问题？如何解决？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#36-%E5%9C%A8%E4%BD%BF%E7%94%A8react%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8hoc"}},[t._v("36. 在使用react过程中什么时候用HOC？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#37%E8%AF%B7%E6%8F%8F%E8%BF%B0%E4%B8%8Bflux%E7%9A%84%E6%80%9D%E6%83%B3"}},[t._v("37.请描述下flux的思想")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#38%E4%BB%80%E4%B9%88%E6%98%AFflux%E8%AF%B4%E8%AF%B4%E4%BD%A0%E5%AF%B9flux%E7%9A%84%E7%90%86%E8%A7%A3%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BF%90%E7%94%A8%E5%9C%BA%E6%99%AF"}},[t._v("38.什么是flux？说说你对flux的理解？有哪些运用场景？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#39redux%E7%9A%84thunk%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("39.redux的thunk作用是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#40redux%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E5%92%8C%E6%9C%AC%E5%9C%B0%E5%82%A8%E5%AD%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("40.redux的数据存储和本地储存有什么区别？")])])])])]),t._v(" "),s("h2",{attrs:{id:"_21-redux和flux的区别是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-redux和flux的区别是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 21.redux和flux的区别是什么？")]),t._v(" "),s("ul",[s("li",[t._v("redux与flux很像，主要区别在于flux有多个可以改变应用状态的store，它通过事件来触发这些变化，组件可以订阅这些时间来和当前状态同步。")]),t._v(" "),s("li",[t._v("redux中没有分发器dispatcher，但在flux中dispatcher被用来传递数据到注册的回调事件，另一个不同的是flux中有很多扩展是可用的，这也带来了一些混乱与矛盾。")]),t._v(" "),s("li",[t._v("在redux中只能定义一个可以更新状态的store，flux中可以定义多个仓库。")]),t._v(" "),s("li",[t._v("redux把store和dispatcher合并，结构更加简单清晰，新增state，对状态管理更加明确。")])]),t._v(" "),s("p",[t._v("Flux:")]),t._v(" "),s("ol",[s("li",[t._v("Store 包含状态和更改逻辑")]),t._v(" "),s("li",[t._v("有多个 Store")]),t._v(" "),s("li",[t._v("所有 Store 都互不影响且是平级的")]),t._v(" "),s("li",[t._v("有单一调度器")]),t._v(" "),s("li",[t._v("React 组件订阅 store")]),t._v(" "),s("li",[t._v("状态是可变的")])]),t._v(" "),s("p",[t._v("Redux:")]),t._v(" "),s("ol",[s("li",[t._v("Store 和更改逻辑是分开的")]),t._v(" "),s("li",[t._v("只有一个 Store")]),t._v(" "),s("li",[t._v("带有分层 reducer 的单一 Store")]),t._v(" "),s("li",[t._v("没有调度器的概念")]),t._v(" "),s("li",[t._v("容器组件是有联系的")]),t._v(" "),s("li",[t._v("状态是不可改变的")])]),t._v(" "),s("h2",{attrs:{id:"_22-react-router的-link-标签和-a-标签有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-react-router的-link-标签和-a-标签有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 22.React-Router的"),s("code",[t._v("<Link>")]),t._v("标签和"),s("code",[t._v("<a>")]),t._v("标签有什么区别？")]),t._v(" "),s("p",[t._v("Link 组件最终会渲染为 HTML 标签 "),s("code",[t._v("<a>")]),t._v("，它的 to、query、hash 属性会被组合在一起并渲染为 href 属性。虽然 Link 被渲染为超链接，但在内部实现上使用脚本拦截了浏览器的默认行为，然后调用了history.pushState 方法。")]),t._v(" "),s("p",[t._v("Link 只负责触发 url 变更，Route 只负责根据 url 渲染组件")]),t._v(" "),s("p",[t._v("相比于 "),s("code",[t._v("<a>")]),t._v(" 标签，"),s("code",[t._v("<Link>")]),t._v(" 避免了不必要的渲染")]),t._v(" "),s("h2",{attrs:{id:"_23-redux中异步action和同步action最大的区别是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-redux中异步action和同步action最大的区别是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 23.Redux中异步action和同步action最大的区别是什么？")]),t._v(" "),s("p",[t._v("Middleware提供的是位于 action 被发起之后，到达 reducer 之前的扩展点。在每次分发action时，所有的Middleware都会执行。")]),t._v(" "),s("p",[t._v("Middleware类似spring中的面向切面编程的思想。本质上是注册一系列的操作，在分发action之前链式执行操作。")]),t._v(" "),s("h2",{attrs:{id:"_24-redux和vuex有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-redux和vuex有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 24.Redux和vuex有什么区别？")]),t._v(" "),s("ul",[s("li",[t._v("vuex改进了redux中的"),s("code",[t._v("action")]),t._v("和"),s("code",[t._v("reducer")]),t._v("函数，以"),s("code",[t._v("mutation")]),t._v("变化函数取代"),s("code",[t._v("reducer")]),t._v("，无需switch，只需在对应的mutation函数里改变state值即可。")])]),t._v(" "),s("h2",{attrs:{id:"_25-redux的中间件是什么？你有用过哪些redux的中间件？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-redux的中间件是什么？你有用过哪些redux的中间件？","aria-hidden":"true"}},[t._v("#")]),t._v(" 25.Redux的中间件是什么？你有用过哪些Redux的中间件？")]),t._v(" "),s("p",[t._v("Redux middleware 提供了一个分类处理 action 的机会")]),t._v(" "),s("p",[t._v("redux中间件指的是action和store之间。即dispatch的封装和升级。")]),t._v(" "),s("ul",[s("li",[t._v("redux-thunk")]),t._v(" "),s("li",[t._v("redux-saga")]),t._v(" "),s("li",[t._v("redux-promise")])]),t._v(" "),s("p",[t._v("redux 中关于 applyMiddleware 的源码")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyMiddleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("middlewares")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("createStore")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用传入的createStore和reducer和创建一个store")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("dispatch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" middlewareAPI "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      getState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让每个 middleware 带着 middlewareAPI 这个参数分别执行一遍")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" chain "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" middlewares"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("middleware")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("middlewareAPI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接着 compose 将 chain 中的所有匿名函数，组装成一个新的函数，即新的 dispatch")]),t._v("\n    dispatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compose")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      dispatch\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("p",[t._v("applyMiddleware 这个函数的核心就在于在于组合 compose，通过将不同的 middlewares 一层一层包裹到原生的 dispatch 之上，然后对 middleware 的设计采用柯里化的方式，以便于compose ，从而可以动态产生 next 方法以及保持 store 的一致性。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doNothingMidddleware")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("调动dispatch派发一个新 action 对象")]),t._v(" "),s("li",[t._v("调用 getState 获得当前 Redux Store 上的状态")]),t._v(" "),s("li",[t._v("调用 next 告诉 Redux 当前中间件工作完毕，让 Redux 调用下一个中间件")]),t._v(" "),s("li",[t._v("访问 action 对象 action 上的所有数据")])]),t._v(" "),s("p",[t._v("redux-thunk 实现")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createThunkMiddleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("extraArgument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" action "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("action")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" extraArgument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" thunk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createThunkMiddleware")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nthunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withExtraArgument "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" createThunkMiddleware"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" thunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h2",{attrs:{id:"_26-说说redux的实现流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-说说redux的实现流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 26.说说Redux的实现流程")]),t._v(" "),s("p",[t._v("组件想要获取State， 用ActionCreator创建了一个请求交给Store,Store借助Reducer确认了该State的状态，Reducer返回给Store一个结果，Store再把这个State转给组件。")]),t._v(" "),s("p",[t._v("Redux的三个非常重要的组成部分：")]),t._v(" "),s("ul",[s("li",[t._v("action")]),t._v(" "),s("li",[t._v("reducer")]),t._v(" "),s("li",[t._v("store")])]),t._v(" "),s("h2",{attrs:{id:"_27-mobx的设计思想是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-mobx的设计思想是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 27.Mobx的设计思想是什么？")]),t._v(" "),s("p",[t._v("Mobx是一个透明函数响应式编程的状态管理库，它使得状态管理简单可伸缩，它的关注点在于：")]),t._v(" "),s("ol",[s("li",[t._v("Action：定义改变状态的动作函数，包括如何变更状态；")]),t._v(" "),s("li",[t._v("Store：集中管理模块状态（State）和动作（action）；")]),t._v(" "),s("li",[t._v("Derivation（衍生）：从应用状态中派生而出，且没有任何其他影响的数据，我们称为derivation（衍生），衍生在以下情况下存在：\n"),s("ol",[s("li",[t._v("用户界面；")]),t._v(" "),s("li",[t._v("衍生数据, 衍生主要有两种：\n"),s("ul",[s("li",[t._v("Computed Values（计算值）：计算值总是可以使用纯函数（pure function）从当前可观察状态中获取；")]),t._v(" "),s("li",[t._v("Reactions（反应）：反应指状态变更时需要自动发生的副作用，这种需要实现其读写操作；")])])])])])]),t._v(" "),s("h2",{attrs:{id:"_28-redux由哪些组件构成？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-redux由哪些组件构成？","aria-hidden":"true"}},[t._v("#")]),t._v(" 28.Redux由哪些组件构成？")]),t._v(" "),s("p",[t._v("Redux的三个非常重要的组成部分：")]),t._v(" "),s("ul",[s("li",[t._v("action")]),t._v(" "),s("li",[t._v("reducer")]),t._v(" "),s("li",[t._v("store")])]),t._v(" "),s("h2",{attrs:{id:"_29-mobx和redux有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-mobx和redux有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 29.Mobx和Redux有什么区别？")]),t._v(" "),s("ol",[s("li",[t._v("都有统一维护管理应用状态的能力\n某一状态只有一个可信数据来源（通常命名为store，指状态容器）；"),s("br"),t._v("\n操作更新状态方式统一，并且可控（通常以action方式提供更新状态的途径）；"),s("br"),t._v("\n支持将store与React组件连接，如react-redux，mobx-react；通常使用状态管理库后，我们将React组件从业务上划分为两类：\n"),s("ul",[s("li",[t._v("容器组件（Container Components）：负责处理具体业务和状态数据，将业务或状态处理函数传入展示型组件；")]),t._v(" "),s("li",[t._v("展示型组件（Presentation Components）：负责展示视图，视图交互回调内调用传入的处理函数；")])])]),t._v(" "),s("li",[t._v("关注点的不同\n"),s("ul",[s("li",[t._v("Redux更多的是遵循Flux模式的一种实现，是一个JavaScript库，它的关注点在于：\n"),s("ul",[s("li",[t._v("Action：一个JavaScript对象，描述动作相关信息，主要包含type属性和payload属性：")]),t._v(" "),s("li",[t._v("Reducer：定义应用状态如何响应不同动作（action），如何更新状态；")]),t._v(" "),s("li",[t._v("Store：管理action和reducer及其关系的对象，主要提供以下功能：\n"),s("ol",[s("li",[t._v("维护应用状态并支持读取访问状态（getState()）；")]),t._v(" "),s("li",[t._v("支持监听action的分发，更新状态（dispatch(action)）；")]),t._v(" "),s("li",[t._v("支持订阅store的变更（subscribe(listener)）；")]),t._v(" "),s("li",[t._v("支持通过中间件（redux-thunk、redux-saga、redux-promise等）处理异步任务流程")])])])])]),t._v(" "),s("li",[t._v("Mobx是一个透明函数响应式编程的状态管理库，它使得状态管理简单可伸缩，它的关注点在于：\n"),s("ul",[s("li",[t._v("Action：定义改变状态的动作函数，包括如何变更状态；")]),t._v(" "),s("li",[t._v("Store：集中管理模块状态（State）和动作（action）；")]),t._v(" "),s("li",[t._v("Derivation（衍生）：从应用状态中派生而出，且没有任何其他影响的数据，我们称为derivation（衍生），衍生在以下情况下存在：\n"),s("ol",[s("li",[t._v("用户界面；")]),t._v(" "),s("li",[t._v("衍生数据, 衍生主要有两种：\n"),s("ul",[s("li",[t._v("Computed Values（计算值）：计算值总是可以使用纯函数（pure function）从当前可观察状态中获取；")]),t._v(" "),s("li",[t._v("Reactions（反应）：反应指状态变更时需要自动发生的副作用，这种需要实现其读写操作；")])])])])])])])])]),t._v(" "),s("li",[t._v("设计思想的不同\n"),s("ul",[s("li",[t._v("Redux 更多的是遵循函数式编程思想")]),t._v(" "),s("li",[t._v("Mobx 设计更多偏向于面向对象编程和响应式编程，通常将状态包装成可观察对象，一旦状态对象变更，就能自动获得更新。")])])]),t._v(" "),s("li",[t._v("对store管理的不同\n"),s("ul",[s("li",[t._v("Redux将所有共享的数据集中在一个大的store中，统一管理")]),t._v(" "),s("li",[t._v("Mobx是按模块将状态划分出多个独立的store进行管理")])])]),t._v(" "),s("li",[t._v("数据可变性的不同\n"),s("ul",[s("li",[t._v("Redux强调的是对象的不可变性，不能直接操作状态对象，而是在原来状态对象的基础上返回一个新的状态对象，最后返回应用的上一状态")]),t._v(" "),s("li",[t._v("Mobx中可以直接使用新值更新状态对象")])])]),t._v(" "),s("li",[t._v("学习成本方面\n"),s("ul",[s("li",[t._v("Redux 较繁琐，流程较多，需要配置，创建store，编写reducer，action，如果涉及异步任务，还需要引入中间件")]),t._v(" "),s("li",[t._v("Mobx 流程相对就简单很多，根据文档上手也比较快")])])])]),t._v(" "),s("h2",{attrs:{id:"_30-在react项目中你是如何选择redux和mobx的？说说你的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-在react项目中你是如何选择redux和mobx的？说说你的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 30.在React项目中你是如何选择Redux和Mobx的？说说你的理解")]),t._v(" "),s("p",[t._v("Redux 的优势:")]),t._v(" "),s("ol",[s("li",[t._v("数据流流动很自然，因为任何 dispatch 都会导致广播，需要依据对象引用是否变化来控制更新粒度。")]),t._v(" "),s("li",[t._v("如果充分利用时间回溯的特征，可以增强业务的可预测性与错误定位能力。")]),t._v(" "),s("li",[t._v("时间回溯代价很高，因为每次都要更新引用，除非增加代码复杂度，或使用 immutable。")]),t._v(" "),s("li",[t._v("时间回溯的另一个代价是 action 与 reducer 完全脱节，数据流过程需要自行脑补。原因是可回溯必然不能保证引用关系。")]),t._v(" "),s("li",[t._v("引入中间件，其实主要为了解决异步带来的副作用，业务逻辑或多或少参杂着 magic。")]),t._v(" "),s("li",[t._v("但是灵活利用中间件，可以通过约定完成许多复杂的工作。")]),t._v(" "),s("li",[t._v("对 typescript 支持困难。")])]),t._v(" "),s("p",[t._v("Mobx：")]),t._v(" "),s("ol",[s("li",[t._v("数据流流动不自然，只有用到的数据才会引发绑定，局部精确更新，但免去了粒度控制烦恼。")]),t._v(" "),s("li",[t._v("没有时间回溯能力，因为数据只有一份引用。")]),t._v(" "),s("li",[t._v("自始至终一份引用，不需要 immutable，也没有复制对象的额外开销。")]),t._v(" "),s("li",[t._v("没有这样的烦恼，数据流动由函数调用一气呵成，便于调试。")]),t._v(" "),s("li",[t._v("业务开发不是脑力活，而是体力活，少一些 magic，多一些效率。")]),t._v(" "),s("li",[t._v("由于没有 magic，所以没有中间件机制，没法通过 magic 加快工作效率（这里 magic 是指 action 分发到 reducer 的过程）。")]),t._v(" "),s("li",[t._v("完美支持 typescript。")])]),t._v(" "),s("p",[t._v("从目前经验来看，我建议前端数据流不太复杂的情况，使用 Mobx，因为更加清晰，也便于维护；如果前端数据流极度复杂，建议谨慎使用 Redux，通过中间件减缓巨大业务复杂度，但还是要做到对开发人员尽量透明，如果可以建议使用 typescript 辅助。")]),t._v(" "),s("h2",{attrs:{id:"_31-你有在react中使用过mobx吗？它的运用场景有哪些？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-你有在react中使用过mobx吗？它的运用场景有哪些？","aria-hidden":"true"}},[t._v("#")]),t._v(" 31.你有在React中使用过Mobx吗？它的运用场景有哪些？")]),t._v(" "),s("p",[t._v("mobx 的核心理念是 简单、可扩展的状态管理库。")]),t._v(" "),s("p",[t._v("react 关注的状态(state)到视图(view)的问题。而 mobx 关注的是状态仓库（store）到的状态(state)的问题。")]),t._v(" "),s("h2",{attrs:{id:"_32-怎样实现react组件的记忆？原理是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-怎样实现react组件的记忆？原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 32.怎样实现react组件的记忆？原理是什么？")]),t._v(" "),s("p",[t._v("每次调用函数把你的传参和结果记录下来，遇到相同的传参，就直接返回记录缓存的结果，不用再去调用函数处理数据！")]),t._v(" "),s("p",[s("strong",[t._v("memoize-one源码解析")])]),t._v(" "),s("p",[t._v("memoize-one是采用闭包来缓存数据的")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("type "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("EqualityFn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" boolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" simpleIsEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" EqualityFn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ResultFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resultFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ResultFn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" isEqual"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" EqualityFn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" simpleIsEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ResultFn "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastThis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来缓存上一次result函数对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mixed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来缓存上一次的传参")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用来缓存上一次的结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" calledOnce"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" boolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否之前调用过")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断两次调用的时候的参数是否相等")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 `isEqual` 是一个抽象函数，用来判断两个值是否相等")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isNewArgEqualToLast "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mixed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEqual")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newArg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mixed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("calledOnce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      lastThis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" lastArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isNewArgEqualToLast"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回之前的结果")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lastResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    calledOnce "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记已经调用过")]),t._v("\n    lastThis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新缓存result对象")]),t._v("\n    lastArgs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新缓存参数")]),t._v("\n    lastResult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resultFn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newArgs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新缓存结果")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lastResult"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回新的结果")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回闭包函数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br")])]),s("h2",{attrs:{id:"_33-创建react动画有哪些方式？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-创建react动画有哪些方式？","aria-hidden":"true"}},[t._v("#")]),t._v(" 33.创建react动画有哪些方式？")]),t._v(" "),s("ol",[s("li",[t._v("基于 React 组件状态的 CSS 动画")]),t._v(" "),s("li",[t._v("基于 React 组件状态的 JS 样式动画")]),t._v(" "),s("li",[t._v("React Motion")]),t._v(" "),s("li",[t._v("Animated")]),t._v(" "),s("li",[t._v("Velocity React")])]),t._v(" "),s("h2",{attrs:{id:"_34-为什么建议不要过渡使用refs？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-为什么建议不要过渡使用refs？","aria-hidden":"true"}},[t._v("#")]),t._v(" 34.为什么建议不要过渡使用Refs？")]),t._v(" "),s("p",[t._v("Refs 提供了一种访问在 render 方法中创建的 DOM 节点或 React 元素的方式。")]),t._v(" "),s("p",[t._v("简单的来说就是处理DOM元素的focus，文本的选择或者媒体的播放等，以及处罚强制动画或者同第三方DOM库集成的时候。")]),t._v(" "),s("p",[t._v("也就是React无法控制局面的时候，就需要直接操作Refs了。")]),t._v(" "),s("p",[t._v("每次组件重新渲染的时候，行内函数都会执行两次，第一次的ele的值为空，第二次才为真正的DOM对象。\n因为在每次渲染中React都会创建一个新的函数实例。因此，React 需要清理旧的 ref 并且设置新的。\n通过将 ref 的回调函数定义成类的绑定函数的方式可以避免上述问题，")]),t._v(" "),s("p",[t._v("如果我们想要将一个子组件的ref传递给父组件，可能会有点麻烦，虽然通过一个特殊的prop属性可以做到，但是感觉有点不太正规。。。")]),t._v(" "),s("h2",{attrs:{id:"_35-在react使用hoc有遇到过哪些问题？如何解决？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-在react使用hoc有遇到过哪些问题？如何解决？","aria-hidden":"true"}},[t._v("#")]),t._v(" 35.在react使用HOC有遇到过哪些问题？如何解决？")]),t._v(" "),s("ol",[s("li",[t._v("当有多个HOC一同使用时，无法直接判断子组件的props是哪个HOC负责传递的。")]),t._v(" "),s("li",[t._v("重复命名的问题：若父子组件有同样名称的props，或使用的多个HOC中存在相同名称的props，则存在覆盖问题，而且react并不会报错。当然可以通过规范命名空间的方式避免。")]),t._v(" "),s("li",[t._v("可以发现HOC产生了许多无用的组件，加深了组件层级。")]),t._v(" "),s("li",[t._v("不要修改原始组件，使用组合进行功能扩展")]),t._v(" "),s("li",[t._v("无关的props传入到原始组件")]),t._v(" "),s("li",[t._v("包装组件的显示名称来方便调试")]),t._v(" "),s("li",[t._v("不要在render方法里面调用HOC方法")]),t._v(" "),s("li",[t._v("静态方法必须被拷贝")])]),t._v(" "),s("h2",{attrs:{id:"_36-在使用react过程中什么时候用hoc？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-在使用react过程中什么时候用hoc？","aria-hidden":"true"}},[t._v("#")]),t._v(" 36. 在使用react过程中什么时候用HOC？")]),t._v(" "),s("p",[t._v("我们写的纯函数组件只负责处理展示，很多时候会发现，由于业务需求，组件需要被“增强”，例如响应浏览器事件等。如果只有一两个组件我们大可以全部重写为class形式，但如果有许多组件需要进行相似或相同的处理（例如都响应浏览器窗口改变这个事件）时，考虑到代码的复用性，很容易想到用函数处理，HOC也正是为了解决这样的问题而出现的。")]),t._v(" "),s("p",[t._v("解决代码复用")]),t._v(" "),s("h2",{attrs:{id:"_37-请描述下flux的思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-请描述下flux的思想","aria-hidden":"true"}},[t._v("#")]),t._v(" 37.请描述下flux的思想")]),t._v(" "),s("p",[t._v('Flux 的最大特点，就是数据的"单向流动"。')]),t._v(" "),s("ol",[s("li",[t._v("用户访问 View")]),t._v(" "),s("li",[t._v("View 发出用户的 Action")]),t._v(" "),s("li",[t._v("Dispatcher 收到 Action，要求 Store 进行相应的更新")]),t._v(" "),s("li",[t._v('Store 更新后，发出一个"change"事件')]),t._v(" "),s("li",[t._v('View 收到"change"事件后，更新页面')])]),t._v(" "),s("h2",{attrs:{id:"_38-什么是flux？说说你对flux的理解？有哪些运用场景？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38-什么是flux？说说你对flux的理解？有哪些运用场景？","aria-hidden":"true"}},[t._v("#")]),t._v(" 38.什么是flux？说说你对flux的理解？有哪些运用场景？")]),t._v(" "),s("p",[t._v("flux是一套前端应用架构模式，核心是单向数据流")]),t._v(" "),s("p",[t._v("组件内部state过于复杂时会使得组件本身臃肿难以维护，因此需要将state与事件部分抽取出来，组件本身只负责获取数据与渲染，其他的逻辑通过分类从component中剥离出去，这样可以保证数据流更清晰。")]),t._v(" "),s("h2",{attrs:{id:"_39-redux的thunk作用是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_39-redux的thunk作用是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 39.redux的thunk作用是什么？")]),t._v(" "),s("p",[t._v("redux-thunk 是一个比较流行的 redux 异步 action 中间件，比如 action 中有 "),s("strong",[t._v("setTimeout")]),t._v(" 或者通过 "),s("strong",[t._v("fetch")]),t._v("通用远程 API 这些场景，那么久应该使用 redux-thunk 了。redux-thunk 帮助你统一了异步和同步 action 的调用方式，把异步过程放在 action 级别解决，对 component 没有影响")]),t._v(" "),s("h2",{attrs:{id:"_40-redux的数据存储和本地储存有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_40-redux的数据存储和本地储存有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 40.redux的数据存储和本地储存有什么区别？")]),t._v(" "),s("p",[t._v("Redux中的状态存储在Redux存储区的内存中。")]),t._v(" "),s("p",[t._v("这意味着，如果刷新页面，该状态将被清除。")]),t._v(" "),s("p",[t._v("redux中的状态只是一个存储在内存中的变量，因为它被所有redux函数引用（通过闭包）。")])])}),[],!1,null,null,null);a.default=n.exports}}]);