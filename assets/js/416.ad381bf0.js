(window.webpackJsonp=window.webpackJsonp||[]).push([[416],{653:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-81-100"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-81-100","aria-hidden":"true"}},[t._v("#")]),t._v(" React 81-100")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#react-81-100"}},[t._v("React 81-100")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#81mern%E5%92%8Cyeoman%E8%84%9A%E6%89%8B%E6%9E%B6%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB"}},[t._v("81.Mern和Yeoman脚手架有什么区别？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#82%E4%BD%A0%E6%9C%89%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%BF%87yeoman%E8%84%9A%E6%89%8B%E6%9E%B6%E5%90%97"}},[t._v("82.你有在项目中使用过Yeoman脚手架吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#83%E4%BD%A0%E6%9C%89%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%BF%87mern%E8%84%9A%E6%89%8B%E6%9E%B6%E5%90%97"}},[t._v("83.你有在项目中使用过Mern脚手架吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#84%E6%80%8E%E6%A0%B7%E5%9C%A8react%E4%B8%AD%E4%BD%BF%E7%94%A8innerhtml"}},[t._v("84.怎样在react中使用innerHTML？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#85%E4%BD%A0%E6%9C%89%E5%86%99%E8%BF%87react%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%8F%92%E4%BB%B6%E5%90%97"}},[t._v("85.你有写过react的中间件插件吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#86react%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E6%9C%BA%E5%88%B6%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%E8%BF%99%E7%A7%8D%E6%9C%BA%E5%88%B6%E6%9C%89%E4%BB%80%E4%B9%88%E4%BD%9C%E7%94%A8"}},[t._v("86.react的中间件机制是怎么样的？这种机制有什么作用？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#87react%E4%B8%AD%E4%BD%A0%E7%94%A8%E8%BF%87%E5%93%AA%E4%BA%9B%E7%AC%AC%E4%B8%89%E6%96%B9%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6"}},[t._v("87.react中你用过哪些第三方的中间件？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#88%E4%B8%8D%E7%94%A8%E8%84%9A%E6%89%8B%E6%9E%B6%E4%BD%A0%E4%BC%9A%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BAreact%E9%A1%B9%E7%9B%AE%E5%90%97"}},[t._v("88.不用脚手架，你会手动搭建react项目吗？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#89%E8%AF%B7%E8%AF%B4%E8%AF%B4react%E4%B8%ADportal%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("89.请说说react中Portal是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#90react%E4%B8%AD%E4%BF%AE%E6%94%B9prop%E5%BC%95%E5%8F%91%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%9C%89%E5%93%AA%E5%87%A0%E4%B8%AA"}},[t._v("90.react中修改prop引发的生命周期有哪几个？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#91react%E4%B8%AD%E8%B0%83%E7%94%A8setstate%E4%BC%9A%E6%9B%B4%E6%96%B0%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%9C%89%E5%93%AA%E5%87%A0%E4%B8%AA"}},[t._v("91.react中调用setState会更新的生命周期有哪几个？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#92react%E5%A4%9A%E4%B8%AAsetstate%E8%B0%83%E7%94%A8%E7%9A%84%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("92.react多个setState调用的原理是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#93react%E4%B8%ADsetstate%E7%9A%84%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E5%91%A2"}},[t._v("93.react中setState的第二个参数作用是什么呢？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#94%E5%86%99%E4%B8%80%E4%B8%AAreact%E7%9A%84%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E5%B9%B6%E8%AF%B4%E6%98%8E%E4%BD%A0%E5%AF%B9%E9%AB%98%E9%98%B6%E7%BB%84%E4%BB%B6%E7%9A%84%E7%90%86%E8%A7%A3"}},[t._v("94.写一个react的高阶组件并说明你对高阶组件的理解")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#95react%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%9C%A8render%E8%AE%BF%E9%97%AErefs%E5%90%97%E4%B8%BA%E4%BB%80%E4%B9%88"}},[t._v("95.react中可以在render访问refs吗？为什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#96react%E4%B8%ADrefs%E7%9A%84%E4%BD%9C%E7%94%A8%E6%98%AF%E4%BB%80%E4%B9%88%E6%9C%89%E5%93%AA%E4%BA%9B%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[t._v("96.react中refs的作用是什么？有哪些应用场景？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#97react%E4%B8%AD%E7%9A%84setstate%E6%98%AF%E5%90%8C%E6%AD%A5%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5%E7%9A%84%E5%91%A2%E4%B8%BA%E4%BB%80%E4%B9%88state%E5%B9%B6%E4%B8%8D%E4%B8%80%E5%AE%9A%E4%BC%9A%E5%90%8C%E6%AD%A5%E6%9B%B4%E6%96%B0"}},[t._v("97.react中的setState是同步还是异步的呢？为什么state并不一定会同步更新？")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E5%90%88%E6%88%90%E4%BA%8B%E4%BB%B6%E4%B8%AD"}},[t._v("生命周期和合成事件中")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%BC%82%E6%AD%A5%E4%BB%A3%E7%A0%81%E5%92%8C%E5%8E%9F%E7%94%9F%E4%BA%8B%E4%BB%B6%E4%B8%AD"}},[t._v("异步代码和原生事件中")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5"}},[t._v("最佳实践")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#98react%E4%B8%AD%E7%9A%84setstate%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0%E7%9A%84%E8%BF%87%E7%A8%8B%E6%98%AF%E4%BB%80%E4%B9%88"}},[t._v("98.react中的setState批量更新的过程是什么？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#99react%E4%B8%AD%E7%9A%84setstate%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6%E6%98%AF%E4%BB%80%E4%B9%88%E5%91%A2"}},[t._v("99.react中的setState执行机制是什么呢？")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#100%E5%9C%A8react%E4%B8%AD%E9%81%8D%E5%8E%86%E7%9A%84%E6%96%B9%E6%B3%95%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%83%E4%BB%AC%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%E5%91%A2"}},[t._v("100.在react中遍历的方法有哪些？它们有什么区别呢？")])])])])]),t._v(" "),s("h2",{attrs:{id:"_81-mern和yeoman脚手架有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_81-mern和yeoman脚手架有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 81.Mern和Yeoman脚手架有什么区别？")]),t._v(" "),s("p",[t._v("Mern：MERN是脚手架的工具，它可以很容易地使用Mongo, Express, React and NodeJS生成同构JS应用。它最大限度地减少安装时间，并得到您使用的成熟技术来加速开发。")]),t._v(" "),s("h2",{attrs:{id:"_82-你有在项目中使用过yeoman脚手架吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_82-你有在项目中使用过yeoman脚手架吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 82.你有在项目中使用过Yeoman脚手架吗？")]),t._v(" "),s("p",[t._v("Yeamon帮助你快速的开展一个项目工程，提供最佳实践和工具，来让你保持高效率编码。")]),t._v(" "),s("p",[t._v("yeoman定义了一套用于提高前端工程师效率的规范工作流工具。")]),t._v(" "),s("p",[t._v("Yeoman其实是3个工具的总和：")]),t._v(" "),s("ul",[s("li",[t._v("yo --- 脚手架，自动生成工具")]),t._v(" "),s("li",[t._v("Grunt、gulp --- 构建工具 （最初只有grunt，后面gulp火了添加进来的）\n-Bower、npm --- 包管理工具 （原来是 bower，后面添加了npm）")])]),t._v(" "),s("h2",{attrs:{id:"_83-你有在项目中使用过mern脚手架吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_83-你有在项目中使用过mern脚手架吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 83.你有在项目中使用过Mern脚手架吗？")]),t._v(" "),s("p",[t._v("Mern：MERN是脚手架的工具，它可以很容易地使用Mongo, Express, React and NodeJS生成同构JS应用。它最大限度地减少安装时间，并得到您使用的成熟技术来加速开发。")]),t._v(" "),s("h2",{attrs:{id:"_84-怎样在react中使用innerhtml？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_84-怎样在react中使用innerhtml？","aria-hidden":"true"}},[t._v("#")]),t._v(" 84.怎样在react中使用innerHTML？")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("dangerouslySetInnerHTML")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("{{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("__html:")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("'<div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("123"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("' }} />\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_85-你有写过react的中间件插件吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_85-你有写过react的中间件插件吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 85.你有写过react的中间件插件吗？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doNothingMidddleware")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"_86-react的中间件机制是怎么样的？这种机制有什么作用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_86-react的中间件机制是怎么样的？这种机制有什么作用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 86.react的中间件机制是怎么样的？这种机制有什么作用？")]),t._v(" "),s("p",[t._v("Redux middleware 提供了一个分类处理 action 的机会")]),t._v(" "),s("p",[t._v("redux中间件指的是action和store之间。即dispatch的封装和升级。")]),t._v(" "),s("p",[t._v("applyMiddleware 这个函数的核心就在于在于组合 compose，通过将不同的 middlewares 一层一层包裹到原生的 dispatch 之上，然后对 middleware 的设计采用柯里化的方式，以便于compose ，从而可以动态产生 next 方法以及保持 store 的一致性。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("doNothingMidddleware")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" dispatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("next")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("action")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("调动dispatch派发一个新 action 对象")]),t._v(" "),s("li",[t._v("调用 getState 获得当前 Redux Store 上的状态")]),t._v(" "),s("li",[t._v("调用 next 告诉 Redux 当前中间件工作完毕，让 Redux 调用下一个中间件")]),t._v(" "),s("li",[t._v("访问 action 对象 action 上的所有数据")])]),t._v(" "),s("h2",{attrs:{id:"_87-react中你用过哪些第三方的中间件？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_87-react中你用过哪些第三方的中间件？","aria-hidden":"true"}},[t._v("#")]),t._v(" 87.react中你用过哪些第三方的中间件？")]),t._v(" "),s("p",[t._v("中间件提供第三方插件的模式，自定义拦截 action -> reducer 的过程。变为 action -> middlewares -> reducer 。这种机制可以让我们改变数据流，实现如异步 action ，action 过滤，日志输出，异常报告等功能。")]),t._v(" "),s("p",[t._v("常见的中间件：")]),t._v(" "),s("ul",[s("li",[t._v("redux-logger：提供日志输出")]),t._v(" "),s("li",[t._v("redux-thunk：处理异步操作")]),t._v(" "),s("li",[t._v("redux-promise：处理异步操作，actionCreator的返回值是promise")])]),t._v(" "),s("h2",{attrs:{id:"_88-不用脚手架，你会手动搭建react项目吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_88-不用脚手架，你会手动搭建react项目吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 88.不用脚手架，你会手动搭建react项目吗？")]),t._v(" "),s("h2",{attrs:{id:"_89-请说说react中portal是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_89-请说说react中portal是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 89.请说说react中Portal是什么？")]),t._v(" "),s("ol",[s("li",[t._v("首先简单的介绍下react中的插槽（Portals），通过"),s("code",[t._v("ReactDOM.createPortal(child, container)")]),t._v("创建，是ReactDOM提供的接口，可以实现将子节点渲染到父组件DOM层次结构之外的DOM节点。")]),t._v(" "),s("li",[t._v("第一个参数（child）是任何可渲染的 React 子元素，例如一个元素，字符串或 片段(fragment)。第二个参数（container）则是一个 DOM 元素。")]),t._v(" "),s("li",[t._v("对于 portal 的一个典型用例是当父组件有 overflow: hidden 或 z-index 样式，但你需要子组件能够在视觉上 “跳出(break out)” 其容器。例如，对话框、hovercards以及提示框。所以一般react组件里的模态框，就是这样实现的。")])]),t._v(" "),s("h2",{attrs:{id:"_90-react中修改prop引发的生命周期有哪几个？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_90-react中修改prop引发的生命周期有哪几个？","aria-hidden":"true"}},[t._v("#")]),t._v(" 90.react中修改prop引发的生命周期有哪几个？")]),t._v(" "),s("ol",[s("li",[t._v("componentWillReceiveProps(nextProps)"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("nextState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//其中接受一个参数是nextProps：为父组件传过来新的props,而 旧的属性还是可以通过this.props来获取！")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一次render时是不会被调用的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(nextProps) 父组件传入的最新值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//console.log(this.props) 上一次加载的值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组件初始化时不调用，组件接受新的props时调用。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果当前点击的按钮传入的参数，与上一次传入的参数不一样的判断")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("farther"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("farther"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"发送"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("farther"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"的请求"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nextProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("farther\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])])]),t._v(" "),s("li",[t._v("shouldComponentUpdate(nextProps, nextState)")]),t._v(" "),s("li",[t._v("componentWillUpdate()")]),t._v(" "),s("li",[t._v("render")]),t._v(" "),s("li",[t._v("componentDidUpdate")])]),t._v(" "),s("h2",{attrs:{id:"_91-react中调用setstate会更新的生命周期有哪几个？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_91-react中调用setstate会更新的生命周期有哪几个？","aria-hidden":"true"}},[t._v("#")]),t._v(" 91.react中调用setState会更新的生命周期有哪几个？")]),t._v(" "),s("ul",[s("li",[t._v("shouldComponentUpdate")]),t._v(" "),s("li",[t._v("componentWillUpdate")]),t._v(" "),s("li",[t._v("render")]),t._v(" "),s("li",[t._v("componentDidUpdate")])]),t._v(" "),s("h2",{attrs:{id:"_92-react多个setstate调用的原理是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_92-react多个setstate调用的原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 92.react多个setState调用的原理是什么？")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("setState")]),t._v(" 通过一个队列机制实现 "),s("code",[t._v("state")]),t._v(" 更新。")]),t._v(" "),s("li",[t._v("当执行 "),s("code",[t._v("setState")]),t._v(" 的时候，会将需要更新的 "),s("code",[t._v("state")]),t._v(" 合并后放入状态队列，而不会立即更新 "),s("code",[t._v("this.state")]),t._v(" ，队列机制可以高效的批量更新 "),s("code",[t._v("state")]),t._v("。")]),t._v(" "),s("li",[t._v("如果不通过 "),s("code",[t._v("setState")]),t._v(" 而直接修改 "),s("code",[t._v("this.state")]),t._v(" 值，那么该 "),s("code",[t._v("state")]),t._v(" 将不会被放入状态队列中，当下次调用 "),s("code",[t._v("setState")]),t._v(" 并对状态队列进行合并时，将会忽略之前直接被修改的 "),s("code",[t._v("state")]),t._v("，而造成无法预知的错误。")])]),t._v(" "),s("h2",{attrs:{id:"_93-react中setstate的第二个参数作用是什么呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_93-react中setstate的第二个参数作用是什么呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 93.react中setState的第二个参数作用是什么呢？")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    streak"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" prevState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("streak "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("这个函数格式是固定的，必须第一个参数是state的前一个状态，第二个参数是属性对象props，这两个对象setState会自动传递到函数中去，同时，这些函数在setState中的执行是同步的，从而解决了异步问题。但是这种写法很少被使用，并不是众所周知的，就是你也可以传递一个函数给setState，它接收到先前的状态和道具并返回一个新的状态，正如我们在上面所做的那样。它不仅没有什么问题，而且如果您根据以前的状态（state）设置状态，推荐使用这种写法。")]),t._v(" "),s("h2",{attrs:{id:"_94-写一个react的高阶组件并说明你对高阶组件的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_94-写一个react的高阶组件并说明你对高阶组件的理解","aria-hidden":"true"}},[t._v("#")]),t._v(" 94.写一个react的高阶组件并说明你对高阶组件的理解")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("WrappedComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NewComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillMount")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getItem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("WrappedComponent data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" NewComponent\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("p",[t._v("现在 "),s("code",[t._v("NewComponent")]),t._v(" 会根据第二个参数 "),s("code",[t._v("name")]),t._v(" 在挂载阶段从 LocalStorage 加载数据，并且 "),s("code",[t._v("setState")]),t._v(" 到自己的 "),s("code",[t._v("state.data")]),t._v(" 中，而渲染的时候将 "),s("code",[t._v("state.data")]),t._v(" 通过 "),s("code",[t._v("props.data")]),t._v(" 传给 "),s("code",[t._v("WrappedComponent")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_95-react中可以在render访问refs吗？为什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_95-react中可以在render访问refs吗？为什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 95.react中可以在render访问refs吗？为什么？")]),t._v(" "),s("p",[t._v("refs提供了可以在render方法中访问dom节点和创建的react元素的方法。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("React.createRef()")]),t._v(" 创建Refs，并通过ref属性关联到react组件中。当组件被构造时，Refs通常被分配给一个实例属性，以便它们可以在整个组件中被引用。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div ref"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h2",{attrs:{id:"_96-react中refs的作用是什么？有哪些应用场景？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_96-react中refs的作用是什么？有哪些应用场景？","aria-hidden":"true"}},[t._v("#")]),t._v(" 96.react中refs的作用是什么？有哪些应用场景？")]),t._v(" "),s("p",[t._v("Refs 提供了可以在render方法中访问dom节点和创建的react元素的方法。")]),t._v(" "),s("p",[t._v("在常规的 React 数据流中，props 是父组件与子组件交互的唯一方式。要修改子元素，你需要用新的 props 去重新渲染子元素。然而，在少数情况下，你需要在常规数据流外强制修改子元素。被修改的子元素可以是 React 组件实例，或者是一个 DOM 元素。在这种情况下，React 提供了解决办法。")]),t._v(" "),s("p",[t._v("何时使用Refs")]),t._v(" "),s("ol",[s("li",[t._v("管理focus，文本选择和媒体播放")]),t._v(" "),s("li",[t._v("触发命令式动画")]),t._v(" "),s("li",[t._v("集成第三方dom库")])]),t._v(" "),s("h2",{attrs:{id:"_97-react中的setstate是同步还是异步的呢？为什么state并不一定会同步更新？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_97-react中的setstate是同步还是异步的呢？为什么state并不一定会同步更新？","aria-hidden":"true"}},[t._v("#")]),t._v(" 97.react中的setState是同步还是异步的呢？为什么state并不一定会同步更新？")]),t._v(" "),s("h3",{attrs:{id:"生命周期和合成事件中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期和合成事件中","aria-hidden":"true"}},[t._v("#")]),t._v(" 生命周期和合成事件中")]),t._v(" "),s("p",[t._v("在 React的生命周期和合成事件中， React仍然处于他的更新机制中，这时无论调用多少次 setState，都不会立即执行更新，而是将要更新的"),s("code",[t._v("·")]),t._v("存入 "),s("code",[t._v("_pendingStateQueue")]),t._v("，将要更新的组件存入 "),s("code",[t._v("dirtyComponent")]),t._v("。")]),t._v(" "),s("p",[t._v("当上一次更新机制执行完毕，以生命周期为例，所有组件，即最顶层组件 "),s("code",[t._v("didmount")]),t._v("后会将批处理标志设置为 false。这时将取出 "),s("code",[t._v("dirtyComponent")]),t._v("中的组件以及 "),s("code",[t._v("_pendingStateQueue")]),t._v("中的 "),s("code",[t._v("state")]),t._v("进行更新。这样就可以确保组件不会被重新渲染多次。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tindex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("所以，如上面的代码，当我们在执行 setState后立即"),s("strong",[t._v("去获取 state，这时是获取不到更新后的 state的，因为处于 React的批处理机制中， state被暂存起来，待批处理机制完成之后，统一进行更新")]),t._v("。")]),t._v(" "),s("p",[t._v("所以。"),s("strong",[t._v("setState本身并不是异步的，而是 React的批处理机制给人一种异步的假象")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"异步代码和原生事件中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步代码和原生事件中","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步代码和原生事件中")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'调用setState'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"state"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("如上面的代码，当我们在异步代码中调用 "),s("code",[t._v("setState")]),t._v("时，根据 "),s("code",[t._v("JavaScript")]),t._v("的异步机制，会将异步代码先暂存，等所有同步代码执行完毕后在执行，这时 "),s("code",[t._v("React")]),t._v("的批处理机制已经走完，处理标志设被设置为 "),s("code",[t._v("false")]),t._v("，这时再调用 "),s("code",[t._v("setState")]),t._v("即可立即执行更新，拿到更新后的结果。")]),t._v(" "),s("p",[s("strong",[t._v("在原生事件中调用 "),s("code",[t._v("setState")]),t._v("并不会触发 React的批处理机制，所以立即能拿到最新结果")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"最佳实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" 最佳实践")]),t._v(" "),s("p",[s("code",[t._v("setState")]),t._v("的第二个参数接收一个函数，该函数会在 "),s("code",[t._v("React")]),t._v("的批处理机制完成之后调用，所以你想在调用 "),s("code",[t._v("setState")]),t._v("后立即获取更新后的值，请在该回调函数中获取。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"_98-react中的setstate批量更新的过程是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_98-react中的setstate批量更新的过程是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 98.react中的setState批量更新的过程是什么？")]),t._v(" "),s("p",[t._v("在React的生命周期和合成事件执行前后都有相应的钩子，分别是"),s("code",[t._v("pre钩子")]),t._v("和"),s("code",[t._v("post钩子")]),t._v("，pre钩子会调用"),s("code",[t._v("batchedUpdate")]),t._v("方法将"),s("code",[t._v("isBatchingUpdates")]),t._v("变量置为"),s("code",[t._v("true")]),t._v("，开启批量更新，而post钩子会将"),s("code",[t._v("isBatchingUpdates")]),t._v("置为"),s("code",[t._v("false")])]),t._v(" "),s("p",[s("code",[t._v("isBatchingUpdates")]),t._v("变量置为true，则会走批量更新分支，setState的更新会被存入队列中，待同步代码执行完后，再执行队列中的state更新。")]),t._v(" "),s("p",[t._v("而在原生事件和异步操作中，不会执行pre钩子，或者生命周期的中的异步操作之前执行了pre钩子，但是pos钩子也在异步操作之前执行完了，"),s("code",[t._v("isBatchingUpdates")]),t._v("必定为false，也就不会进行批量更新。")]),t._v(" "),s("h2",{attrs:{id:"_99-react中的setstate执行机制是什么呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_99-react中的setstate执行机制是什么呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 99.react中的setState执行机制是什么呢？")]),t._v(" "),s("p",[t._v("React中的setState有Batch模式(批量更新模式)和普通模式。")]),t._v(" "),s("p",[t._v("普通模式下,setState能够即时更新state，重新调用 render 方法，然后把render方法所渲染的最新的内容显示到页面上。")]),t._v(" "),s("p",[t._v("Batch模式下,React不会立刻修改state。而是把这个对象放到一个更新队列中，稍后才会从队列中把新的状态提取出来合并到 state中，然后再触发组件更新。")]),t._v(" "),s("ol",[s("li",[t._v("由 React 控制的事件处理过程 setState 不会同步更新 this.state。如我们使用React库中的表单组件，例如 select、input、button等，它都是处于React库的控制之下，因此setState会以异步的方式执行。")]),t._v(" "),s("li",[t._v("React 控制之外的情况， setState 会同步更新 this.state。通过JavaScript原生addEventListener直接添加的事件处理函数，使用setTimeout/setInterval 等setState会以同步的方式执行。")])]),t._v(" "),s("h2",{attrs:{id:"_100-在react中遍历的方法有哪些？它们有什么区别呢？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_100-在react中遍历的方法有哪些？它们有什么区别呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 100.在react中遍历的方法有哪些？它们有什么区别呢？")]),t._v(" "),s("ul",[s("li",[t._v("map():返回一个新的Array，每个元素为调用func的结果\n-forEach():没有返回值，只是针对每个元素调用func")])])])}),[],!1,null,null,null);a.default=n.exports}}]);