(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{474:function(e,r,t){"use strict";t.r(r);var a=t(1),v=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"git工作流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git工作流","aria-hidden":"true"}},[e._v("#")]),e._v(" git工作流")]),e._v(" "),t("h2",{attrs:{id:"工作流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流","aria-hidden":"true"}},[e._v("#")]),e._v(" 工作流")]),e._v(" "),t("p",[e._v("基于gitflow, 简化版本")]),e._v(" "),t("p",[e._v("参考文档: http://nvie.com/posts/a-successful-git-branching-model/")]),e._v(" "),t("p",[e._v("区别： 不设"),t("code",[e._v("release")]),e._v(", "),t("code",[e._v("develop")]),e._v("分支， 暂不打tag， 保留"),t("code",[e._v("master")]),e._v(", "),t("code",[e._v("feature/*")]),e._v(", "),t("code",[e._v("hotfix/*")])]),e._v(" "),t("h2",{attrs:{id:"项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目","aria-hidden":"true"}},[e._v("#")]),e._v(" 项目")]),e._v(" "),t("p",[t("code",[e._v("feprogram/taoche")]),e._v("等项目锁定master, 不允许直接在master下改动，需要提交merge request进行review")]),e._v(" "),t("p",[t("code",[e._v("act")]),e._v("等项目进行敏捷开发, 不锁定master, 分支自行管理")]),e._v(" "),t("p",[t("code",[e._v("crm")]),e._v("等项目设立develop分支，特性分支开发完成后合并入develop, master分支从develop单向merge")]),e._v(" "),t("h2",{attrs:{id:"工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作流程","aria-hidden":"true"}},[e._v("#")]),e._v(" 工作流程")]),e._v(" "),t("ol",[t("li",[e._v("基于最新master建立分支，功能分支"),t("code",[e._v("feature/xxx")]),e._v(" 或 线上bug修复分支 "),t("code",[e._v("hotfix/xxx")])]),e._v(" "),t("li",[e._v("在分支下开发")]),e._v(" "),t("li",[e._v("开发完成， merge master到当前分支，release灰度/上线。")])]),e._v(" "),t("h2",{attrs:{id:"推荐工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐工作流程","aria-hidden":"true"}},[e._v("#")]),e._v(" 推荐工作流程")]),e._v(" "),t("p",[e._v("切换到release分支；"),t("br"),e._v("\npull最新代码；"),t("br"),e._v("\n建立自己的工作分支（新功能开发、快速验证，bug修复建议都建分支）："),t("code",[e._v("git checkout -b dev_xmli")]),e._v("；"),t("br"),e._v("\n或者创建开发同一功能几个人公用的分支(如：dev-insurance, change-price)；"),t("br"),e._v("\n在自己的分支上提交（commit）；"),t("br"),e._v("\n开发完毕，做测试；"),t("br"),e._v("\n切换到release分支，pull;"),t("br"),e._v("\n切换到工作分支，merge代码： g"),t("code",[e._v("it merge release")]),e._v("，合并线上最新更改，测试一下自己的更改；"),t("br"),e._v("\n切换到release, 然后 git merge dev_xmli，把自己的更改合并到线上分支；"),t("br"),e._v("\n提交代码到服务器-- git push;"),t("br"),e._v("\n如有必要告知其他同事更新代码，尤其是项目文件的改动；"),t("br"),e._v("\n如果是发布的release，打tag；"),t("br"),e._v(" "),t("code",[e._v("git tag -a v1.8.0")]),t("br"),e._v("\n提交tag:"),t("br"),e._v(" "),t("code",[e._v("git push --tags")])])])}),[],!1,null,null,null);r.default=v.exports}}]);